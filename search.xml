<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Flutter项目实践 - Evo音乐播放器（1）</title>
      <link href="/2020/04/08/flutter-project-evo-01/"/>
      <url>/2020/04/08/flutter-project-evo-01/</url>
      
        <content type="html"><![CDATA[<h2 id="项目背景"><a href="#项目背景" class="headerlink" title="项目背景"></a>项目背景</h2><p>2020年1月份换了新工作，由于工作需要，开始了<a href="https://flutter.dev/" target="_blank" rel="noopener">Flutter</a>的学习之旅，另一方面，自己也认为Flutter是未来移动项目界面开发的一大利器，具体优点这里就不赘述了，总之是很值得移动和web端开发的同行们学习的。</p><p>年后的紧张工作也告一段落了，利用清明几天假期，做一个Demo程序来检验一下学习成果，当然，以后还会持续更新，将flutter的一些实用的特性用在这个项目中。</p><p>为什么选择重写<a href="https://github.com/SongJiaqiang/EvoRadio" target="_blank" rel="noopener">EvoRadio</a>，EvoRadio是我2016年刚开始学习Swift时的实践项目，到现在已经年久失修，而且我对环境音乐也比较感兴趣，几乎每天都在用，在github上也得到了60多位朋友的star支持。但是问题也是很多的，比如没有适配iPhone X系列的刘海屏，播放控制不灵敏，听歌操作太复杂等等。所以，选择重写EvoRadio就是要简化音乐播放的流程，优化播放质量，让它成为一个“不仅仅是个Flutter Demo”的app，简化而不简单。</p><p>我给它重新命名为<code>Evo</code>，UI参考豆瓣FM，我会一步步记录下自己的开发步骤，读者也可以根据步骤来完成项目。</p><p>Let’s Go！</p><h2 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h2><h3 id="Create-repo"><a href="#Create-repo" class="headerlink" title="Create repo"></a>Create repo</h3><p>首先在我自己的github下创建了一个Evo项目，地址是：<a href="https://github.com/SongJiaqiang/Evo，然后克隆到本地。" target="_blank" rel="noopener">https://github.com/SongJiaqiang/Evo，然后克隆到本地。</a></p><h3 id="New-project"><a href="#New-project" class="headerlink" title="New project"></a>New project</h3><p>我使用的IDE是Miscrosoft Visual Code，简称VSCode，使用快捷键Shift+Command+P，输入<code>flutter</code>，选择New Project，然后输入项目名称<code>evo</code>，就可以得到一个hello world项目了。</p><p>注：开发环境安装请参照官方教程：<a href="https://flutter.dev/docs/get-started/install/macos" target="_blank" rel="noopener">https://flutter.dev/docs/get-started/install/macos</a></p><a href="http://q8ffj20b0.bkt.clouddn.com/blog/2020-04-07-163609.jpg" data-fancybox="group" data-caption="CEDF8F03-A93C-4BA9-B98E-67EC79A16F8B" class="fancybox"><img alt="CEDF8F03-A93C-4BA9-B98E-67EC79A16F8B" style="zoom:50%;" title="CEDF8F03-A93C-4BA9-B98E-67EC79A16F8B" data-src="http://q8ffj20b0.bkt.clouddn.com/blog/2020-04-07-163609.jpg" class="lazyload"></a><p>关闭VSCode，将evo项目文件拷贝到git目录。</p><p>打开Terminal客户端，我使用的是iTerm，进入evo根目录，使用<code>flutter run</code>运行app，也可以直接在VSCode上运行。如果你的电脑打开了多个设备，包括手机、模拟器，可能会让你选择设备id。如果你的设备上安装有多个flutter项目，还会提示你选择appid，具体命令如下，根据自己的实际情况配置即可。</p><p><code>flutter run -d &lt;deviceID&gt; --app-id &lt;appID&gt;</code></p><p>因为我偏爱使用真机调试，我的真机设备是iPhone，所以这里还会遇到一个签名的问题，命令行会提示你选择电脑上已安装的证书，也可以直接打开iOS宿主项目进行配置，目录是<code>ios/Runner.xcworkspace</code>。配置签名同时，也顺手修改了一下appid。</p><p>由于我用的Xcode版本是11.4，所以还会出现一个Framework链接的问题，解决方案flutter官方已经给出：<a href="https://flutter.dev/docs/development/ios-project-migration" target="_blank" rel="noopener">https://flutter.dev/docs/development/ios-project-migration</a></p><p><code>Building for iOS, but the linked and embedded framework &#39;App.framework&#39; was built for iOS Simulator.</code></p><p>至此，就得到了一个可持续开发的初始项目了。</p><p>git commit记录一下：</p><pre class=" language-shell"><code class="language-shell">git commit -m 'New project'</code></pre><p>慢着！我们应该忽略掉一些不需要提交的文件，这里直接使用flutter项目的<a href="https://github.com/flutter/flutter/blob/master/.gitignore" target="_blank" rel="noopener">gitignore</a>文件，文件拷贝到evo根目录下，使用git amend重新提交一下commit。</p><a href="http://q8ffj20b0.bkt.clouddn.com/blog/2020-04-07-163511.jpg" data-fancybox="group" data-caption="image-20200403113930571" class="fancybox"><img alt="image-20200403113930571" style="zoom: 25%;" title="image-20200403113930571" data-src="http://q8ffj20b0.bkt.clouddn.com/blog/2020-04-07-163511.jpg" class="lazyload"></a><h2 id="左右滑屏"><a href="#左右滑屏" class="headerlink" title="左右滑屏"></a>左右滑屏</h2><h3 id="TabController"><a href="#TabController" class="headerlink" title="TabController"></a>TabController</h3><p>根据豆瓣FM的设计，主页是有两屏可以左右滑动的，如图</p><a href="http://q8ffj20b0.bkt.clouddn.com/blog/2020-04-07-163624.gif" data-fancybox="group" data-caption="demo_video_01" class="fancybox"><img alt="demo_video_01" style="zoom:25%;" title="demo_video_01" data-src="http://q8ffj20b0.bkt.clouddn.com/blog/2020-04-07-163624.gif" class="lazyload"></a><p>根据这个滑动效果，我们可以使用<code>TabController</code>，也可以自定义<code>ScrollView</code>，简单起见我们采用<code>TabController</code>来实现，具体代码如下，请使用下面代码替换你的<code>_MyHomePageState</code>类。</p><pre class=" language-dart"><code class="language-dart"><span class="token keyword">class</span> <span class="token class-name">_MyHomePageState</span> <span class="token keyword">extends</span> <span class="token class-name">State</span><span class="token operator">&lt;</span>MyHomePage<span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token metadata symbol">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">DefaultTabController</span><span class="token punctuation">(</span>      length<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>      child<span class="token punctuation">:</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>        appBar<span class="token punctuation">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">'Evo'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        body<span class="token punctuation">:</span> <span class="token function">TabBarView</span><span class="token punctuation">(</span>          children<span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token function">Container</span><span class="token punctuation">(</span>              color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>redAccent<span class="token punctuation">,</span>              child<span class="token punctuation">:</span> <span class="token function">Center</span><span class="token punctuation">(</span>                child<span class="token punctuation">:</span>                    <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">'First Page'</span><span class="token punctuation">,</span> style<span class="token punctuation">:</span> <span class="token function">TextStyle</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>white<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>              <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token function">Container</span><span class="token punctuation">(</span>              color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>greenAccent<span class="token punctuation">,</span>              child<span class="token punctuation">:</span> <span class="token function">Center</span><span class="token punctuation">(</span>                child<span class="token punctuation">:</span>                    <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">'Second Page'</span><span class="token punctuation">,</span> style<span class="token punctuation">:</span> <span class="token function">TextStyle</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>white<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>              <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="代码解释"><a href="#代码解释" class="headerlink" title="代码解释"></a>代码解释</h4><ol><li>TabController是Flutter自带的tab控制器，可以用于多屏滚动效果。</li><li>参考<a href="https://medium.com/@mohamedelamin/flutter-tabs-example-5dca1f06329e" target="_blank" rel="noopener">资料</a></li></ol><a href="http://q8ffj20b0.bkt.clouddn.com/blog/2020-04-07-163659.gif" data-fancybox="group" data-caption="demo_video_02" class="fancybox"><img alt="demo_video_02" style="zoom:25%;" title="demo_video_02" data-src="http://q8ffj20b0.bkt.clouddn.com/blog/2020-04-07-163659.gif" class="lazyload"></a><h3 id="TabBar"><a href="#TabBar" class="headerlink" title="TabBar"></a>TabBar</h3><p>TableController有自带的Tabbar，但是不符合我们想要的效果，所以我们自定义一个TabBar吧。</p><p>我们在lib目录下创建一个新文件名<code>top_bar.dart</code>，这里存放自定义的TabBar，叫做<code>TopBar</code>，代码如下。</p><pre class=" language-dart"><code class="language-dart"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">TopBar</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token keyword">implements</span> <span class="token class-name">PreferredSizeWidget</span> <span class="token punctuation">{</span>  <span class="token metadata symbol">@override</span>  Size <span class="token keyword">get</span> preferredSize <span class="token operator">=</span><span class="token operator">></span> <span class="token function">Size</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token metadata symbol">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">Container</span><span class="token punctuation">(</span>      color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>white<span class="token punctuation">,</span>      child<span class="token punctuation">:</span> <span class="token function">Column</span><span class="token punctuation">(</span>        crossAxisAlignment<span class="token punctuation">:</span> CrossAxisAlignment<span class="token punctuation">.</span>end<span class="token punctuation">,</span>        mainAxisAlignment<span class="token punctuation">:</span> MainAxisAlignment<span class="token punctuation">.</span>end<span class="token punctuation">,</span>        mainAxisSize<span class="token punctuation">:</span> MainAxisSize<span class="token punctuation">.</span>max<span class="token punctuation">,</span>        children<span class="token punctuation">:</span> <span class="token operator">&lt;</span>Widget<span class="token operator">></span><span class="token punctuation">[</span>          <span class="token function">Container</span><span class="token punctuation">(</span>            height<span class="token punctuation">:</span> <span class="token number">40</span><span class="token punctuation">,</span>            child<span class="token punctuation">:</span> <span class="token function">Row</span><span class="token punctuation">(</span>              mainAxisAlignment<span class="token punctuation">:</span> MainAxisAlignment<span class="token punctuation">.</span>spaceBetween<span class="token punctuation">,</span>              children<span class="token punctuation">:</span> <span class="token operator">&lt;</span>Widget<span class="token operator">></span><span class="token punctuation">[</span>                <span class="token function">Container</span><span class="token punctuation">(</span>                  padding<span class="token punctuation">:</span> EdgeInsets<span class="token punctuation">.</span><span class="token function">only</span><span class="token punctuation">(</span>left<span class="token punctuation">:</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                  child<span class="token punctuation">:</span> <span class="token function">Text</span><span class="token punctuation">(</span>                    <span class="token string">'EvoRadio'</span><span class="token punctuation">,</span>                    style<span class="token punctuation">:</span> <span class="token function">TextStyle</span><span class="token punctuation">(</span>                      color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>black<span class="token punctuation">,</span>                      fontSize<span class="token punctuation">:</span> <span class="token number">22</span><span class="token punctuation">,</span>                      fontWeight<span class="token punctuation">:</span> FontWeight<span class="token punctuation">.</span>bold<span class="token punctuation">,</span>                    <span class="token punctuation">)</span><span class="token punctuation">,</span>                  <span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token function">Container</span><span class="token punctuation">(</span>                  child<span class="token punctuation">:</span> <span class="token function">Row</span><span class="token punctuation">(</span>                    children<span class="token punctuation">:</span> <span class="token operator">&lt;</span>Widget<span class="token operator">></span><span class="token punctuation">[</span>                      <span class="token function">IconButton</span><span class="token punctuation">(</span>                        iconSize<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">,</span>                        icon<span class="token punctuation">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>search<span class="token punctuation">,</span> size<span class="token punctuation">:</span> <span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                        onPressed<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>                      <span class="token punctuation">)</span><span class="token punctuation">,</span>                      <span class="token function">IconButton</span><span class="token punctuation">(</span>                        iconSize<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">,</span>                        icon<span class="token punctuation">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>person_outline<span class="token punctuation">,</span> size<span class="token punctuation">:</span> <span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                        onPressed<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>                      <span class="token punctuation">)</span><span class="token punctuation">,</span>                    <span class="token punctuation">]</span><span class="token punctuation">,</span>                  <span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token punctuation">)</span><span class="token punctuation">,</span>              <span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token function">Container</span><span class="token punctuation">(</span>            padding<span class="token punctuation">:</span> EdgeInsets<span class="token punctuation">.</span><span class="token function">only</span><span class="token punctuation">(</span>left<span class="token punctuation">:</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            height<span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span>            child<span class="token punctuation">:</span> <span class="token function">Row</span><span class="token punctuation">(</span>              children<span class="token punctuation">:</span> <span class="token operator">&lt;</span>Widget<span class="token operator">></span><span class="token punctuation">[</span>                <span class="token function">Container</span><span class="token punctuation">(</span>                  height<span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span>                  width<span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span>                  decoration<span class="token punctuation">:</span> <span class="token function">BoxDecoration</span><span class="token punctuation">(</span>                    color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>greenAccent<span class="token punctuation">,</span>                    borderRadius<span class="token punctuation">:</span> BorderRadius<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>                      Radius<span class="token punctuation">.</span><span class="token function">circular</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    <span class="token punctuation">)</span><span class="token punctuation">,</span>                  <span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token function">SizedBox</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token function">Container</span><span class="token punctuation">(</span>                  height<span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span>                  width<span class="token punctuation">:</span> <span class="token number">16</span><span class="token punctuation">,</span>                  decoration<span class="token punctuation">:</span> <span class="token function">BoxDecoration</span><span class="token punctuation">(</span>                    color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>greenAccent<span class="token punctuation">,</span>                    borderRadius<span class="token punctuation">:</span> BorderRadius<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>                      Radius<span class="token punctuation">.</span><span class="token function">circular</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    <span class="token punctuation">)</span><span class="token punctuation">,</span>                  <span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token punctuation">)</span><span class="token punctuation">,</span>              <span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token function">SizedBox</span><span class="token punctuation">(</span>height<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>接着我们使用<code>TopBar</code>替换掉main.dart中的<code>AppBar</code></p><pre class=" language-dart"><code class="language-dart"><span class="token keyword">class</span> <span class="token class-name">_MyHomePageState</span> <span class="token keyword">extends</span> <span class="token class-name">State</span><span class="token operator">&lt;</span>MyHomePage<span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token metadata symbol">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">DefaultTabController</span><span class="token punctuation">(</span>      length<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>      child<span class="token punctuation">:</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>        appBar<span class="token punctuation">:</span> <span class="token function">TopBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        body<span class="token punctuation">:</span> <span class="token function">TabBarView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">//已省略部分代码</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="代码解释-1"><a href="#代码解释-1" class="headerlink" title="代码解释"></a>代码解释</h4><ol><li>查看AppBar源码，我们发现它实现了<code>PreferredSizeWidget</code>，这个Widget是有一个必须实现的<code>preferredSize</code>属性，<code>preferredSize</code>决定了TopBar的高度，我们暂且设为60。参考<a href="https://api.flutter.dev/flutter/widgets/PreferredSizeWidget-class.html" target="_blank" rel="noopener">资料1</a>、<a href="https://medium.com/@ketanchoyal/create-a-custom-app-bar-flutter-e32164e0be6f" target="_blank" rel="noopener">资料2</a></li><li>TopBar的布局包括一个标题，两个按钮，以及一组圆点指示器</li></ol><a href="http://q8ffj20b0.bkt.clouddn.com/blog/2020-04-07-163708.png" data-fancybox="group" data-caption="image-20200403142453818" class="fancybox"><img alt="image-20200403142453818" style="zoom:25%;" title="image-20200403142453818" data-src="http://q8ffj20b0.bkt.clouddn.com/blog/2020-04-07-163708.png" class="lazyload"></a><p>接下来我们为<code>TopBar</code>添加属性，允许使用者设置左侧title和右侧功能按钮，代码如下：</p><p>top_bar.dart</p><pre class=" language-dart"><code class="language-dart"><span class="token keyword">class</span> <span class="token class-name">TopBar</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token keyword">implements</span> <span class="token class-name">PreferredSizeWidget</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// 标题</span>  <span class="token keyword">final</span> String title<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 右侧功能按钮组合</span>  <span class="token keyword">final</span> List<span class="token operator">&lt;</span>Widget<span class="token operator">></span> children<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 标题点击事件</span>  <span class="token keyword">final</span> Function onTitleTapped<span class="token punctuation">;</span>  <span class="token metadata symbol">@override</span>  <span class="token keyword">final</span> Size preferredSize<span class="token punctuation">;</span>  <span class="token function">TopBar</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    <span class="token metadata symbol">@required</span> <span class="token keyword">this</span><span class="token punctuation">.</span>title<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// title为必须属性</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>children<span class="token punctuation">,</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>onTitleTapped<span class="token punctuation">,</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> preferredSize <span class="token operator">=</span> Size<span class="token punctuation">.</span><span class="token function">fromHeight</span><span class="token punctuation">(</span><span class="token number">60.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token metadata symbol">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">Container</span><span class="token punctuation">(</span>      color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>white<span class="token punctuation">,</span>      child<span class="token punctuation">:</span> <span class="token function">Column</span><span class="token punctuation">(</span>        crossAxisAlignment<span class="token punctuation">:</span> CrossAxisAlignment<span class="token punctuation">.</span>end<span class="token punctuation">,</span>        mainAxisAlignment<span class="token punctuation">:</span> MainAxisAlignment<span class="token punctuation">.</span>end<span class="token punctuation">,</span>        mainAxisSize<span class="token punctuation">:</span> MainAxisSize<span class="token punctuation">.</span>max<span class="token punctuation">,</span>        children<span class="token punctuation">:</span> <span class="token operator">&lt;</span>Widget<span class="token operator">></span><span class="token punctuation">[</span>          <span class="token function">Container</span><span class="token punctuation">(</span>            height<span class="token punctuation">:</span> <span class="token number">40</span><span class="token punctuation">,</span>            child<span class="token punctuation">:</span> <span class="token function">Row</span><span class="token punctuation">(</span>              mainAxisAlignment<span class="token punctuation">:</span> MainAxisAlignment<span class="token punctuation">.</span>spaceBetween<span class="token punctuation">,</span>              children<span class="token punctuation">:</span> <span class="token operator">&lt;</span>Widget<span class="token operator">></span><span class="token punctuation">[</span>                <span class="token function">Container</span><span class="token punctuation">(</span>                  padding<span class="token punctuation">:</span> EdgeInsets<span class="token punctuation">.</span><span class="token function">only</span><span class="token punctuation">(</span>left<span class="token punctuation">:</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                  child<span class="token punctuation">:</span> <span class="token function">Text</span><span class="token punctuation">(</span>                    title<span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// 使用外部传入的title</span>                    style<span class="token punctuation">:</span> <span class="token function">TextStyle</span><span class="token punctuation">(</span>                      color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>black<span class="token punctuation">,</span>                      fontSize<span class="token punctuation">:</span> <span class="token number">22</span><span class="token punctuation">,</span>                      fontWeight<span class="token punctuation">:</span> FontWeight<span class="token punctuation">.</span>bold<span class="token punctuation">,</span>                    <span class="token punctuation">)</span><span class="token punctuation">,</span>                  <span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token function">Container</span><span class="token punctuation">(</span>                  child<span class="token punctuation">:</span> <span class="token function">Row</span><span class="token punctuation">(</span>                    children<span class="token punctuation">:</span> children <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> children <span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 使用外部传入的children</span>                  <span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token punctuation">)</span><span class="token punctuation">,</span>              <span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token comment" spellcheck="true">// 已省略部分代码</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>main.dart</p><pre class=" language-dart"><code class="language-dart"><span class="token keyword">class</span> <span class="token class-name">_MyHomePageState</span> <span class="token keyword">extends</span> <span class="token class-name">State</span><span class="token operator">&lt;</span>MyHomePage<span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token metadata symbol">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">DefaultTabController</span><span class="token punctuation">(</span>      length<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>      child<span class="token punctuation">:</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>        appBar<span class="token punctuation">:</span> <span class="token function">TopBar</span><span class="token punctuation">(</span>          title<span class="token punctuation">:</span> <span class="token string">'EvoRadio'</span><span class="token punctuation">,</span>          onTitleTapped<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">'Tap title'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span><span class="token punctuation">,</span>          children<span class="token punctuation">:</span> <span class="token operator">&lt;</span>Widget<span class="token operator">></span><span class="token punctuation">[</span>            <span class="token function">IconButton</span><span class="token punctuation">(</span>              iconSize<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">,</span>              icon<span class="token punctuation">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>search<span class="token punctuation">,</span> size<span class="token punctuation">:</span> <span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">,</span>              onPressed<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token function">IconButton</span><span class="token punctuation">(</span>              iconSize<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">,</span>              icon<span class="token punctuation">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>person_outline<span class="token punctuation">,</span> size<span class="token punctuation">:</span> <span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">,</span>              onPressed<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token comment" spellcheck="true">// 已省略部分代码</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="代码解释-2"><a href="#代码解释-2" class="headerlink" title="代码解释"></a>代码解释</h4><ol><li>为TopBar添加title属性，用于设置TopBar的标题</li><li>为TopBar添加children属性，用于设置TopBar右侧功能按钮</li><li>为TopBar添加onTitleTapped属性，用于设置点击标题的回调事件</li></ol><p>再接下来，我们将<code>TopBar</code>的位置指示器和标题跟<code>TabBarView</code>的切换关联起来，代码如下：</p><p>top_bar.dart</p><pre class=" language-dart"><code class="language-dart"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">TopBar</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token keyword">implements</span> <span class="token class-name">PreferredSizeWidget</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// 标题</span>  <span class="token keyword">final</span> String title<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 右侧功能按钮组合</span>  <span class="token keyword">final</span> List<span class="token operator">&lt;</span>Widget<span class="token operator">></span> children<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 标题点击事件</span>  <span class="token keyword">final</span> Function onTitleTapped<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 指示器长度</span>  <span class="token keyword">final</span> int indicatorLength<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 指示器下标</span>  <span class="token keyword">final</span> int indicatorIndex<span class="token punctuation">;</span>  <span class="token metadata symbol">@override</span>  <span class="token keyword">final</span> Size preferredSize<span class="token punctuation">;</span>  <span class="token function">TopBar</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    <span class="token metadata symbol">@required</span> <span class="token keyword">this</span><span class="token punctuation">.</span>title<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// title为必须属性</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>children<span class="token punctuation">,</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>onTitleTapped<span class="token punctuation">,</span>    <span class="token metadata symbol">@required</span> <span class="token keyword">this</span><span class="token punctuation">.</span>indicatorLength<span class="token punctuation">,</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>indicatorIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> preferredSize <span class="token operator">=</span> Size<span class="token punctuation">.</span><span class="token function">fromHeight</span><span class="token punctuation">(</span><span class="token number">60.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token metadata symbol">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">Container</span><span class="token punctuation">(</span>      color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>white<span class="token punctuation">,</span>      child<span class="token punctuation">:</span> <span class="token function">Column</span><span class="token punctuation">(</span>        crossAxisAlignment<span class="token punctuation">:</span> CrossAxisAlignment<span class="token punctuation">.</span>end<span class="token punctuation">,</span>        mainAxisAlignment<span class="token punctuation">:</span> MainAxisAlignment<span class="token punctuation">.</span>end<span class="token punctuation">,</span>        mainAxisSize<span class="token punctuation">:</span> MainAxisSize<span class="token punctuation">.</span>max<span class="token punctuation">,</span>        children<span class="token punctuation">:</span> <span class="token operator">&lt;</span>Widget<span class="token operator">></span><span class="token punctuation">[</span>          <span class="token function">Container</span><span class="token punctuation">(</span>            height<span class="token punctuation">:</span> <span class="token number">40</span><span class="token punctuation">,</span>            child<span class="token punctuation">:</span> <span class="token function">Row</span><span class="token punctuation">(</span>              mainAxisAlignment<span class="token punctuation">:</span> MainAxisAlignment<span class="token punctuation">.</span>spaceBetween<span class="token punctuation">,</span>              children<span class="token punctuation">:</span> <span class="token operator">&lt;</span>Widget<span class="token operator">></span><span class="token punctuation">[</span>                <span class="token function">Container</span><span class="token punctuation">(</span>                  padding<span class="token punctuation">:</span> EdgeInsets<span class="token punctuation">.</span><span class="token function">only</span><span class="token punctuation">(</span>left<span class="token punctuation">:</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                  child<span class="token punctuation">:</span> <span class="token function">GestureDetector</span><span class="token punctuation">(</span>                    onTap<span class="token punctuation">:</span> onTitleTapped<span class="token punctuation">,</span>                    child<span class="token punctuation">:</span> <span class="token function">Text</span><span class="token punctuation">(</span>                      title<span class="token punctuation">,</span>                      style<span class="token punctuation">:</span> <span class="token function">TextStyle</span><span class="token punctuation">(</span>                        color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>black<span class="token punctuation">,</span>                        fontSize<span class="token punctuation">:</span> <span class="token number">22</span><span class="token punctuation">,</span>                        fontWeight<span class="token punctuation">:</span> FontWeight<span class="token punctuation">.</span>bold<span class="token punctuation">,</span>                      <span class="token punctuation">)</span><span class="token punctuation">,</span>                    <span class="token punctuation">)</span><span class="token punctuation">,</span>                  <span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token function">Container</span><span class="token punctuation">(</span>                  child<span class="token punctuation">:</span> <span class="token function">Row</span><span class="token punctuation">(</span>children<span class="token punctuation">:</span> children <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> children <span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token punctuation">)</span><span class="token punctuation">,</span>              <span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token function">Container</span><span class="token punctuation">(</span>            padding<span class="token punctuation">:</span> EdgeInsets<span class="token punctuation">.</span><span class="token function">only</span><span class="token punctuation">(</span>left<span class="token punctuation">:</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            height<span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span>            child<span class="token punctuation">:</span> <span class="token function">_buildIndicator</span><span class="token punctuation">(</span>indicatorLength<span class="token punctuation">,</span> indicatorIndex<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token function">SizedBox</span><span class="token punctuation">(</span>height<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  Widget <span class="token function">_buildIndicator</span><span class="token punctuation">(</span>int length<span class="token punctuation">,</span> int index<span class="token punctuation">,</span> double height<span class="token punctuation">)</span> <span class="token punctuation">{</span>    double normalWidth <span class="token operator">=</span> height<span class="token punctuation">;</span>    double maxWidth <span class="token operator">=</span> normalWidth <span class="token operator">*</span> <span class="token number">4</span><span class="token punctuation">;</span>    List<span class="token operator">&lt;</span>Widget<span class="token operator">></span> children <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      double itemWidth <span class="token operator">=</span> index <span class="token operator">==</span> i <span class="token operator">?</span> maxWidth <span class="token punctuation">:</span> normalWidth<span class="token punctuation">;</span>      double itemHeight <span class="token operator">=</span> normalWidth<span class="token punctuation">;</span>      double itemSpacing <span class="token operator">=</span> normalWidth<span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">// add spacing</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        children<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token function">SizedBox</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> itemSpacing<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token comment" spellcheck="true">// add item</span>      <span class="token keyword">var</span> item <span class="token operator">=</span> <span class="token function">Container</span><span class="token punctuation">(</span>        width<span class="token punctuation">:</span> itemWidth<span class="token punctuation">,</span>        height<span class="token punctuation">:</span> itemHeight<span class="token punctuation">,</span>        decoration<span class="token punctuation">:</span> <span class="token function">BoxDecoration</span><span class="token punctuation">(</span>          color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>greenAccent<span class="token punctuation">,</span>          borderRadius<span class="token punctuation">:</span> BorderRadius<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>Radius<span class="token punctuation">.</span><span class="token function">circular</span><span class="token punctuation">(</span>itemHeight <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">;</span>      children<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token function">Row</span><span class="token punctuation">(</span>children<span class="token punctuation">:</span> children<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>main.dart</p><pre class=" language-dart"><code class="language-dart"><span class="token keyword">class</span> <span class="token class-name">_MyHomePageState</span> <span class="token keyword">extends</span> <span class="token class-name">State</span><span class="token operator">&lt;</span>MyHomePage<span class="token operator">></span>    <span class="token keyword">with</span> SingleTickerProviderStateMixin <span class="token punctuation">{</span>  TabController _tabController<span class="token punctuation">;</span>  int _currentIndex<span class="token punctuation">;</span>  String _topBarTitle<span class="token punctuation">;</span>  <span class="token keyword">final</span> List<span class="token operator">&lt;</span>String<span class="token operator">></span> _topBarTitles <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'First Page'</span><span class="token punctuation">,</span> <span class="token string">'Second Page'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token metadata symbol">@override</span>  <span class="token keyword">void</span> <span class="token function">initState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">initState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    _currentIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    _topBarTitle <span class="token operator">=</span> _topBarTitles<span class="token punctuation">.</span>first<span class="token punctuation">;</span>    _tabController <span class="token operator">=</span> <span class="token function">TabController</span><span class="token punctuation">(</span>length<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> vsync<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    _tabController<span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span>_handleTabController<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token metadata symbol">@override</span>  <span class="token keyword">void</span> <span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    _tabController<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token metadata symbol">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">DefaultTabController</span><span class="token punctuation">(</span>      length<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>      child<span class="token punctuation">:</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>        appBar<span class="token punctuation">:</span> <span class="token function">TopBar</span><span class="token punctuation">(</span>          title<span class="token punctuation">:</span> _topBarTitle<span class="token punctuation">,</span>          onTitleTapped<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">'Tap title'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span><span class="token punctuation">,</span>          indicatorLength<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>          indicatorIndex<span class="token punctuation">:</span> _currentIndex<span class="token punctuation">,</span>          children<span class="token punctuation">:</span> <span class="token operator">&lt;</span>Widget<span class="token operator">></span><span class="token punctuation">[</span>            <span class="token function">IconButton</span><span class="token punctuation">(</span>              iconSize<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">,</span>              icon<span class="token punctuation">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>search<span class="token punctuation">,</span> size<span class="token punctuation">:</span> <span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">,</span>              onPressed<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token function">IconButton</span><span class="token punctuation">(</span>              iconSize<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">,</span>              icon<span class="token punctuation">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>person_outline<span class="token punctuation">,</span> size<span class="token punctuation">:</span> <span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">,</span>              onPressed<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>        body<span class="token punctuation">:</span> <span class="token function">TabBarView</span><span class="token punctuation">(</span>          controller<span class="token punctuation">:</span> _tabController<span class="token punctuation">,</span>          children<span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token function">Container</span><span class="token punctuation">(</span>              color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>redAccent<span class="token punctuation">,</span>              child<span class="token punctuation">:</span> <span class="token function">Center</span><span class="token punctuation">(</span>                child<span class="token punctuation">:</span> <span class="token function">Text</span><span class="token punctuation">(</span>                  _topBarTitles<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                  style<span class="token punctuation">:</span> <span class="token function">TextStyle</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>white<span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token punctuation">)</span><span class="token punctuation">,</span>              <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token function">Container</span><span class="token punctuation">(</span>              color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>greenAccent<span class="token punctuation">,</span>              child<span class="token punctuation">:</span> <span class="token function">Center</span><span class="token punctuation">(</span>                child<span class="token punctuation">:</span> <span class="token function">Text</span><span class="token punctuation">(</span>                  _topBarTitles<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                  style<span class="token punctuation">:</span> <span class="token function">TextStyle</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>white<span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token punctuation">)</span><span class="token punctuation">,</span>              <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">void</span> <span class="token function">_handleTabController</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">final</span> int index <span class="token operator">=</span> _tabController<span class="token punctuation">.</span>index<span class="token punctuation">;</span>    <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      _currentIndex <span class="token operator">=</span> index<span class="token punctuation">;</span>      _topBarTitle <span class="token operator">=</span> _topBarTitles<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="代码解释-3"><a href="#代码解释-3" class="headerlink" title="代码解释"></a>代码解释</h4><ol><li>新增了<code>indicatorLength</code>表示位置指示器的长度。</li><li>新增了<code>indicatorIndex</code>表示位置指示器当前位置。</li><li>封装指示器的创建方法<code>_buildIndicator</code>，根据具体的指示器长度、位置、高度生成指示器控件。</li><li>为<code>_MyHomePageState</code>新增<code>_currentIndex</code>和<code>_topBarTitle</code>两个状态值，用于同步<code>TopBar</code>的标题和指示器位置。</li><li>为<code>TabBarView</code>设置<code>_tabController</code>，并添加监听，获取当前的page下标，同步到<code>TopBar</code>。</li><li><code>TopBar</code>内容切换没有使用动画，有点生硬，后续再完善。</li></ol><a href="http://q8ffj20b0.bkt.clouddn.com/blog/2020-04-07-163722.gif" data-fancybox="group" data-caption="demo_video_03" class="fancybox"><img alt="demo_video_03" style="zoom: 25%;" title="demo_video_03" data-src="http://q8ffj20b0.bkt.clouddn.com/blog/2020-04-07-163722.gif" class="lazyload"></a><p>左右滑屏简单的完成了，我们先提个git记录。</p><pre class=" language-shell"><code class="language-shell">git commit -m 'Add TopBar as a navigation bar.'</code></pre><h2 id="推荐页"><a href="#推荐页" class="headerlink" title="推荐页"></a>推荐页</h2><p>推荐页是滑屏第二个页面，是一个简单的列表页，下面是豆瓣FM的效果图。</p><a href="http://q8ffj20b0.bkt.clouddn.com/blog/2020-04-07-163735.gif" data-fancybox="group" data-caption="demo_video_04" class="fancybox"><img alt="demo_video_04" style="zoom:25%;" title="demo_video_04" data-src="http://q8ffj20b0.bkt.clouddn.com/blog/2020-04-07-163735.gif" class="lazyload"></a><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p>首先实现列表的主体框架，新建<code>tab_recommend_page.dart</code>文件，代码如下：</p><pre class=" language-dart"><code class="language-dart"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">TabRecommendPage</span> <span class="token keyword">extends</span> <span class="token class-name">StatefulWidget</span> <span class="token punctuation">{</span>  <span class="token metadata symbol">@override</span>  _TabRecommendPageState <span class="token function">createState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">_TabRecommendPageState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">_TabRecommendPageState</span> <span class="token keyword">extends</span> <span class="token class-name">State</span><span class="token operator">&lt;</span>TabRecommendPage<span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token metadata symbol">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> ListView<span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span>        itemCount<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">,</span>        itemBuilder<span class="token punctuation">:</span> <span class="token punctuation">(</span>_<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token keyword">return</span> <span class="token function">TabRecommendPageCell</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">TabRecommendPageCell</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>  <span class="token metadata symbol">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">Container</span><span class="token punctuation">(</span>      padding<span class="token punctuation">:</span> EdgeInsets<span class="token punctuation">.</span><span class="token function">only</span><span class="token punctuation">(</span>left<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">,</span> right<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">,</span> top<span class="token punctuation">:</span> <span class="token number">16</span><span class="token punctuation">,</span> bottom<span class="token punctuation">:</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      child<span class="token punctuation">:</span> <span class="token function">Column</span><span class="token punctuation">(</span>        children<span class="token punctuation">:</span> <span class="token operator">&lt;</span>Widget<span class="token operator">></span><span class="token punctuation">[</span>          <span class="token function">Container</span><span class="token punctuation">(</span>            child<span class="token punctuation">:</span> <span class="token function">Column</span><span class="token punctuation">(</span>              children<span class="token punctuation">:</span> <span class="token operator">&lt;</span>Widget<span class="token operator">></span><span class="token punctuation">[</span>                <span class="token function">Container</span><span class="token punctuation">(</span>                  padding<span class="token punctuation">:</span> EdgeInsets<span class="token punctuation">.</span><span class="token function">only</span><span class="token punctuation">(</span>left<span class="token punctuation">:</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                  child<span class="token punctuation">:</span> <span class="token function">Row</span><span class="token punctuation">(</span>                    children<span class="token punctuation">:</span> <span class="token operator">&lt;</span>Widget<span class="token operator">></span><span class="token punctuation">[</span>                      <span class="token function">Expanded</span><span class="token punctuation">(</span>                        child<span class="token punctuation">:</span> <span class="token function">Text</span><span class="token punctuation">(</span>                          <span class="token string">'我想和你虚度时光'</span><span class="token punctuation">,</span>                          maxLines<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>                          style<span class="token punctuation">:</span> <span class="token function">TextStyle</span><span class="token punctuation">(</span>                            color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>black<span class="token punctuation">,</span>                            fontSize<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">,</span>                            fontWeight<span class="token punctuation">:</span> FontWeight<span class="token punctuation">.</span>bold<span class="token punctuation">,</span>                          <span class="token punctuation">)</span><span class="token punctuation">,</span>                        <span class="token punctuation">)</span><span class="token punctuation">,</span>                      <span class="token punctuation">)</span><span class="token punctuation">,</span>                    <span class="token punctuation">]</span><span class="token punctuation">,</span>                  <span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token function">Container</span><span class="token punctuation">(</span>                  height<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">,</span>                  padding<span class="token punctuation">:</span> EdgeInsets<span class="token punctuation">.</span><span class="token function">only</span><span class="token punctuation">(</span>left<span class="token punctuation">:</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                  child<span class="token punctuation">:</span> <span class="token function">Row</span><span class="token punctuation">(</span>                    children<span class="token punctuation">:</span> <span class="token operator">&lt;</span>Widget<span class="token operator">></span><span class="token punctuation">[</span>                      <span class="token function">ClipOval</span><span class="token punctuation">(</span>                        child<span class="token punctuation">:</span> <span class="token function">Container</span><span class="token punctuation">(</span>                          width<span class="token punctuation">:</span> <span class="token number">24</span><span class="token punctuation">,</span>                          height<span class="token punctuation">:</span> <span class="token number">24</span><span class="token punctuation">,</span>                          decoration<span class="token punctuation">:</span> <span class="token function">BoxDecoration</span><span class="token punctuation">(</span>                            color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>greenAccent<span class="token punctuation">,</span>                            borderRadius<span class="token punctuation">:</span> BorderRadius<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>Radius<span class="token punctuation">.</span><span class="token function">circular</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                          <span class="token punctuation">)</span><span class="token punctuation">,</span>                          child<span class="token punctuation">:</span> Image<span class="token punctuation">.</span><span class="token function">network</span><span class="token punctuation">(</span>                              <span class="token string">'https://img9.doubanio.com/icon/ul129958703-1.jpg'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                        <span class="token punctuation">)</span><span class="token punctuation">,</span>                      <span class="token punctuation">)</span><span class="token punctuation">,</span>                      <span class="token function">SizedBox</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                      <span class="token function">RichText</span><span class="token punctuation">(</span>                        text<span class="token punctuation">:</span> <span class="token function">TextSpan</span><span class="token punctuation">(</span>                          style<span class="token punctuation">:</span> <span class="token function">TextStyle</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>black<span class="token punctuation">,</span> fontSize<span class="token punctuation">:</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                          children<span class="token punctuation">:</span> <span class="token operator">&lt;</span>TextSpan<span class="token operator">></span><span class="token punctuation">[</span>                            <span class="token function">TextSpan</span><span class="token punctuation">(</span>text<span class="token punctuation">:</span> <span class="token string">'来自'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                            <span class="token function">TextSpan</span><span class="token punctuation">(</span>                              text<span class="token punctuation">:</span> <span class="token string">' Evo官方 '</span><span class="token punctuation">,</span>                              style<span class="token punctuation">:</span> <span class="token function">TextStyle</span><span class="token punctuation">(</span>fontWeight<span class="token punctuation">:</span> FontWeight<span class="token punctuation">.</span>bold<span class="token punctuation">)</span><span class="token punctuation">,</span>                            <span class="token punctuation">)</span><span class="token punctuation">,</span>                            <span class="token function">TextSpan</span><span class="token punctuation">(</span>text<span class="token punctuation">:</span> <span class="token string">'的推荐'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                          <span class="token punctuation">]</span><span class="token punctuation">,</span>                        <span class="token punctuation">)</span><span class="token punctuation">,</span>                      <span class="token punctuation">)</span><span class="token punctuation">,</span>                    <span class="token punctuation">]</span><span class="token punctuation">,</span>                  <span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token function">SizedBox</span><span class="token punctuation">(</span>height<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token function">ClipRRect</span><span class="token punctuation">(</span>                  clipBehavior<span class="token punctuation">:</span> Clip<span class="token punctuation">.</span>antiAlias<span class="token punctuation">,</span>                  borderRadius<span class="token punctuation">:</span> BorderRadius<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>Radius<span class="token punctuation">.</span><span class="token function">circular</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                  child<span class="token punctuation">:</span> <span class="token function">Container</span><span class="token punctuation">(</span>                    height<span class="token punctuation">:</span> <span class="token number">260</span><span class="token punctuation">,</span>                    decoration<span class="token punctuation">:</span> <span class="token function">BoxDecoration</span><span class="token punctuation">(</span>                      color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>pinkAccent<span class="token punctuation">,</span>                    <span class="token punctuation">)</span><span class="token punctuation">,</span>                    child<span class="token punctuation">:</span> <span class="token function">Column</span><span class="token punctuation">(</span>                      children<span class="token punctuation">:</span> <span class="token operator">&lt;</span>Widget<span class="token operator">></span><span class="token punctuation">[</span>                        <span class="token function">Container</span><span class="token punctuation">(</span>                          child<span class="token punctuation">:</span> Image<span class="token punctuation">.</span><span class="token function">network</span><span class="token punctuation">(</span>                            <span class="token string">'https://p2.music.126.net/PJz3X_y5Il564dV27jHQeg==/2535473815844119.jpg'</span><span class="token punctuation">,</span>                            height<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">,</span>                            width<span class="token punctuation">:</span> double<span class="token punctuation">.</span>infinity<span class="token punctuation">,</span>                            fit<span class="token punctuation">:</span> BoxFit<span class="token punctuation">.</span>cover<span class="token punctuation">,</span>                          <span class="token punctuation">)</span><span class="token punctuation">,</span>                        <span class="token punctuation">)</span><span class="token punctuation">,</span>                        <span class="token function">Row</span><span class="token punctuation">(</span>                          mainAxisAlignment<span class="token punctuation">:</span> MainAxisAlignment<span class="token punctuation">.</span>spaceBetween<span class="token punctuation">,</span>                          children<span class="token punctuation">:</span> <span class="token operator">&lt;</span>Widget<span class="token operator">></span><span class="token punctuation">[</span>                            <span class="token function">Container</span><span class="token punctuation">(</span>                              height<span class="token punctuation">:</span> <span class="token number">60</span><span class="token punctuation">,</span>                              padding<span class="token punctuation">:</span> EdgeInsets<span class="token punctuation">.</span><span class="token function">only</span><span class="token punctuation">(</span>left<span class="token punctuation">:</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                              child<span class="token punctuation">:</span> <span class="token function">Center</span><span class="token punctuation">(</span>                                child<span class="token punctuation">:</span> <span class="token function">Container</span><span class="token punctuation">(</span>                                  width<span class="token punctuation">:</span> <span class="token number">36</span><span class="token punctuation">,</span>                                  height<span class="token punctuation">:</span> <span class="token number">36</span><span class="token punctuation">,</span>                                  decoration<span class="token punctuation">:</span> <span class="token function">BoxDecoration</span><span class="token punctuation">(</span>                                    color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>white<span class="token punctuation">,</span>                                    borderRadius<span class="token punctuation">:</span>                                        BorderRadius<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>Radius<span class="token punctuation">.</span><span class="token function">circular</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                  <span class="token punctuation">)</span><span class="token punctuation">,</span>                                  child<span class="token punctuation">:</span> <span class="token function">GestureDetector</span><span class="token punctuation">(</span>                                    child<span class="token punctuation">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>                                      Icons<span class="token punctuation">.</span>headset<span class="token punctuation">,</span>                                      color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>black<span class="token punctuation">,</span>                                    <span class="token punctuation">)</span><span class="token punctuation">,</span>                                    onTap<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>                                  <span class="token punctuation">)</span><span class="token punctuation">,</span>                                <span class="token punctuation">)</span><span class="token punctuation">,</span>                              <span class="token punctuation">)</span><span class="token punctuation">,</span>                            <span class="token punctuation">)</span><span class="token punctuation">,</span>                            <span class="token function">Container</span><span class="token punctuation">(</span>                              height<span class="token punctuation">:</span> <span class="token number">60</span><span class="token punctuation">,</span>                              padding<span class="token punctuation">:</span> EdgeInsets<span class="token punctuation">.</span><span class="token function">only</span><span class="token punctuation">(</span>right<span class="token punctuation">:</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                              child<span class="token punctuation">:</span> <span class="token function">Row</span><span class="token punctuation">(</span>                                children<span class="token punctuation">:</span> <span class="token operator">&lt;</span>Widget<span class="token operator">></span><span class="token punctuation">[</span>                                  <span class="token function">Container</span><span class="token punctuation">(</span>                                    width<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>                                    height<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>                                    decoration<span class="token punctuation">:</span> <span class="token function">BoxDecoration</span><span class="token punctuation">(</span>                                      color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>white<span class="token punctuation">,</span>                                      borderRadius<span class="token punctuation">:</span>                                          BorderRadius<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>Radius<span class="token punctuation">.</span><span class="token function">circular</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                    <span class="token punctuation">)</span><span class="token punctuation">,</span>                                    child<span class="token punctuation">:</span> <span class="token function">GestureDetector</span><span class="token punctuation">(</span>                                      child<span class="token punctuation">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>                                        Icons<span class="token punctuation">.</span>share<span class="token punctuation">,</span>                                        color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>black<span class="token punctuation">,</span>                                      <span class="token punctuation">)</span><span class="token punctuation">,</span>                                      onTap<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>                                    <span class="token punctuation">)</span><span class="token punctuation">,</span>                                  <span class="token punctuation">)</span><span class="token punctuation">,</span>                                  <span class="token function">SizedBox</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                  <span class="token function">Container</span><span class="token punctuation">(</span>                                    width<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>                                    height<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>                                    decoration<span class="token punctuation">:</span> <span class="token function">BoxDecoration</span><span class="token punctuation">(</span>                                      color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>white<span class="token punctuation">,</span>                                      borderRadius<span class="token punctuation">:</span>                                          BorderRadius<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>Radius<span class="token punctuation">.</span><span class="token function">circular</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                    <span class="token punctuation">)</span><span class="token punctuation">,</span>                                    child<span class="token punctuation">:</span> <span class="token function">GestureDetector</span><span class="token punctuation">(</span>                                      child<span class="token punctuation">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>                                        Icons<span class="token punctuation">.</span>favorite_border<span class="token punctuation">,</span>                                        color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>redAccent<span class="token punctuation">,</span>                                      <span class="token punctuation">)</span><span class="token punctuation">,</span>                                      onTap<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>                                    <span class="token punctuation">)</span><span class="token punctuation">,</span>                                  <span class="token punctuation">)</span><span class="token punctuation">,</span>                                <span class="token punctuation">]</span><span class="token punctuation">,</span>                              <span class="token punctuation">)</span><span class="token punctuation">,</span>                            <span class="token punctuation">)</span><span class="token punctuation">,</span>                          <span class="token punctuation">]</span><span class="token punctuation">,</span>                        <span class="token punctuation">)</span><span class="token punctuation">,</span>                      <span class="token punctuation">]</span><span class="token punctuation">,</span>                    <span class="token punctuation">)</span><span class="token punctuation">,</span>                  <span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token punctuation">)</span><span class="token punctuation">,</span>              <span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="代码解释-4"><a href="#代码解释-4" class="headerlink" title="代码解释"></a>代码解释</h4><ol><li><p>推荐页<code>TabRecommendPage</code>主要使用<code>ListView.builder</code>创建一个列表</p></li><li><p>列表项命名为<code>TabRecommendPageCell</code>，包含标题、推荐者头像、推荐者名称、推荐合集封面、试听按钮、分享按钮和收藏按钮。</p></li><li><p>FM的Cell有个三角遮罩，暂时简化掉。</p></li></ol><p>ListView第一个展示当前日期和星期，和其它的cell有所区别，代码如下：</p><pre class=" language-dart"><code class="language-dart"><span class="token keyword">class</span> <span class="token class-name">TabRecommendPageHeader</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>  <span class="token metadata symbol">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">Container</span><span class="token punctuation">(</span>      padding<span class="token punctuation">:</span> EdgeInsets<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      child<span class="token punctuation">:</span> <span class="token function">ClipRRect</span><span class="token punctuation">(</span>        clipBehavior<span class="token punctuation">:</span> Clip<span class="token punctuation">.</span>antiAlias<span class="token punctuation">,</span>        borderRadius<span class="token punctuation">:</span> BorderRadius<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>Radius<span class="token punctuation">.</span><span class="token function">circular</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        child<span class="token punctuation">:</span> <span class="token function">Container</span><span class="token punctuation">(</span>          <span class="token comment" spellcheck="true">// height: 130,</span>          color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>white<span class="token punctuation">,</span>          child<span class="token punctuation">:</span> <span class="token function">Stack</span><span class="token punctuation">(</span>            children<span class="token punctuation">:</span> <span class="token operator">&lt;</span>Widget<span class="token operator">></span><span class="token punctuation">[</span>              <span class="token function">Positioned</span><span class="token punctuation">(</span>                left<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>                right<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>                top<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>                bottom<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>                child<span class="token punctuation">:</span> Image<span class="token punctuation">.</span><span class="token function">network</span><span class="token punctuation">(</span>                  <span class="token string">'https://hbimg.huabanimg.com/dd618f5006aaff178eaa2a1aae563fd29736a633dcd76-yBwuSb_fw658'</span><span class="token punctuation">,</span>                  fit<span class="token punctuation">:</span> BoxFit<span class="token punctuation">.</span>cover<span class="token punctuation">,</span>                <span class="token punctuation">)</span><span class="token punctuation">,</span>              <span class="token punctuation">)</span><span class="token punctuation">,</span>              <span class="token function">Positioned</span><span class="token punctuation">(</span>                child<span class="token punctuation">:</span> <span class="token function">Container</span><span class="token punctuation">(</span>                  height<span class="token punctuation">:</span> <span class="token number">130</span><span class="token punctuation">,</span>                  padding<span class="token punctuation">:</span> EdgeInsets<span class="token punctuation">.</span><span class="token function">symmetric</span><span class="token punctuation">(</span>horizontal<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                  child<span class="token punctuation">:</span> <span class="token function">Column</span><span class="token punctuation">(</span>                    mainAxisAlignment<span class="token punctuation">:</span> MainAxisAlignment<span class="token punctuation">.</span>center<span class="token punctuation">,</span>                    children<span class="token punctuation">:</span> <span class="token operator">&lt;</span>Widget<span class="token operator">></span><span class="token punctuation">[</span>                      <span class="token function">Text</span><span class="token punctuation">(</span>                        <span class="token string">'每日私享歌单'</span><span class="token punctuation">,</span>                        style<span class="token punctuation">:</span> <span class="token function">TextStyle</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>black<span class="token punctuation">,</span> fontSize<span class="token punctuation">:</span> <span class="token number">14</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                      <span class="token punctuation">)</span><span class="token punctuation">,</span>                      <span class="token function">Text</span><span class="token punctuation">(</span>                        <span class="token function">dayOfWeekString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                        style<span class="token punctuation">:</span> <span class="token function">TextStyle</span><span class="token punctuation">(</span>                          color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>black<span class="token punctuation">,</span>                          fontSize<span class="token punctuation">:</span> <span class="token number">40</span><span class="token punctuation">,</span>                          fontWeight<span class="token punctuation">:</span> FontWeight<span class="token punctuation">.</span>bold<span class="token punctuation">,</span>                        <span class="token punctuation">)</span><span class="token punctuation">,</span>                      <span class="token punctuation">)</span><span class="token punctuation">,</span>                      <span class="token function">Text</span><span class="token punctuation">(</span>                        <span class="token function">dateString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                        style<span class="token punctuation">:</span> <span class="token function">TextStyle</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>black<span class="token punctuation">,</span> fontSize<span class="token punctuation">:</span> <span class="token number">14</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                      <span class="token punctuation">)</span><span class="token punctuation">,</span>                    <span class="token punctuation">]</span><span class="token punctuation">,</span>                  <span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token punctuation">)</span><span class="token punctuation">,</span>              <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>          <span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  String <span class="token function">dateString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">final</span> DateTime now <span class="token operator">=</span> DateTime<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token function">DateFormat</span><span class="token punctuation">(</span><span class="token string">'yyyy.MM.dd'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>now<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  String <span class="token function">dayOfWeekString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">final</span> DateTime now <span class="token operator">=</span> DateTime<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> DateFormat<span class="token punctuation">.</span><span class="token function">E</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>now<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><code>tab_recommend_page.dart</code>中的<code>_TabRecommendPageState</code>变为</p><pre class=" language-dart"><code class="language-dart"><span class="token keyword">class</span> <span class="token class-name">_TabRecommendPageState</span> <span class="token keyword">extends</span> <span class="token class-name">State</span><span class="token operator">&lt;</span>TabRecommendPage<span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token metadata symbol">@override</span>  <span class="token keyword">void</span> <span class="token function">didChangeDependencies</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">loadData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">didChangeDependencies</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token metadata symbol">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> ListView<span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span>      itemCount<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">,</span>      itemBuilder<span class="token punctuation">:</span> <span class="token punctuation">(</span>_<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token keyword">return</span> <span class="token function">TabRecommendPageHeader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>          <span class="token keyword">return</span> <span class="token function">TabRecommendPageCell</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="代码解释-5"><a href="#代码解释-5" class="headerlink" title="代码解释"></a>代码解释</h4><ol><li><code>TabRecommendPageHeader</code>是ListView的头部信息，展示当前日期和星期，同时配有一张底图</li><li>日期格式化使用了<code>Intl</code>第三方库中的<code>DateFormat</code>类，需要再文件<code>pubspec.yaml</code>中添加依赖信息<code>intl: ^0.16.1</code></li></ol><a href="http://q8ffj20b0.bkt.clouddn.com/blog/2020-04-07-163800.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img style="zoom:25%;" data-src="http://q8ffj20b0.bkt.clouddn.com/blog/2020-04-07-163800.png" class="lazyload"></a><p>至此，推荐页的骨架就搭好了，git记录一下</p><pre class=" language-shell"><code class="language-shell">git commit -m 'Add TabRecommendPage'</code></pre><h3 id="加载数据"><a href="#加载数据" class="headerlink" title="加载数据"></a>加载数据</h3><p>我们接下来为ListView配置上真实的数据，开始想抓取豆瓣FM的接口，但是太复杂了，也有其他开发者已经整理出豆瓣FM的接口，但是只有音乐频道数据，没有推荐列表的数据。所以我这里沿用EvoRadio整理出来的Lava推荐歌单的数据。</p><p>为了更好的管理文件，我们开始采用BLoC的开发模式，首先我们在lib目录下新建一个<code>recommend_page</code>目录，然后在recommend目录下分别新建ui、model、data、bloc四个文件夹，最后把<code>tab_recommend_page.dart</code>文件移到<code>lib/recommend/ui</code>目录下，同时将<code>TabRecommendPageCell</code>拆分到文件<code>tab_recommend_page_cell.dart</code>中,将<code>TabRecommendPageHeader</code>拆分到文件<code>tab_recommend_page_header.dart</code>中。</p><a href="http://q8ffj20b0.bkt.clouddn.com/blog/2020-04-07-163836.jpg" data-fancybox="group" data-caption="5E10C91C-C551-49FA-9E1E-2F7B93FC8E00" class="fancybox"><img alt="5E10C91C-C551-49FA-9E1E-2F7B93FC8E00" style="zoom:25%;" title="5E10C91C-C551-49FA-9E1E-2F7B93FC8E00" data-src="http://q8ffj20b0.bkt.clouddn.com/blog/2020-04-07-163836.jpg" class="lazyload"></a><p>接下来我们需要新建一个模型类来封装<code>TabRecommendPageCell</code>的数据，在model目录下新建文件模型RecommendModel，文件名<code>recommend_model.dart</code>，为RecommendModel添加几个基本的属性，然后为TabRecommendPageCell新增cellModel属性和构造方法，并且使用cellModel的字段替换cell中对应信息的位置。</p><p>代码如下：</p><p>recommend_model.dart</p><pre class=" language-dart"><code class="language-dart"><span class="token keyword">class</span> <span class="token class-name">RecommendModel</span> <span class="token punctuation">{</span>  String id<span class="token punctuation">;</span>  String title<span class="token punctuation">;</span>  String avatarUrl<span class="token punctuation">;</span>  String userName<span class="token punctuation">;</span>  String imgUrl<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>tab_recommend_page_cell.dart</p><pre class=" language-dart"><code class="language-dart"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'package:evo/recommend_page/model/recommend_model.dart'</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">TabRecommendPageCell</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>  <span class="token keyword">final</span> RecommendModel cellModel<span class="token punctuation">;</span>  <span class="token keyword">const</span> <span class="token function">TabRecommendPageCell</span><span class="token punctuation">(</span><span class="token punctuation">{</span>Key key<span class="token punctuation">,</span> <span class="token metadata symbol">@required</span> <span class="token keyword">this</span><span class="token punctuation">.</span>cellModel<span class="token punctuation">}</span><span class="token punctuation">)</span>      <span class="token punctuation">:</span> <span class="token keyword">super</span><span class="token punctuation">(</span>key<span class="token punctuation">:</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token metadata symbol">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">Container</span><span class="token punctuation">(</span>      padding<span class="token punctuation">:</span> EdgeInsets<span class="token punctuation">.</span><span class="token function">only</span><span class="token punctuation">(</span>left<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">,</span> right<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">,</span> top<span class="token punctuation">:</span> <span class="token number">16</span><span class="token punctuation">,</span> bottom<span class="token punctuation">:</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      child<span class="token punctuation">:</span> <span class="token function">Column</span><span class="token punctuation">(</span>        children<span class="token punctuation">:</span> <span class="token operator">&lt;</span>Widget<span class="token operator">></span><span class="token punctuation">[</span>          <span class="token function">Container</span><span class="token punctuation">(</span>            child<span class="token punctuation">:</span> <span class="token function">Column</span><span class="token punctuation">(</span>              children<span class="token punctuation">:</span> <span class="token operator">&lt;</span>Widget<span class="token operator">></span><span class="token punctuation">[</span>                <span class="token function">Container</span><span class="token punctuation">(</span>                  padding<span class="token punctuation">:</span> EdgeInsets<span class="token punctuation">.</span><span class="token function">only</span><span class="token punctuation">(</span>left<span class="token punctuation">:</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                  child<span class="token punctuation">:</span> <span class="token function">Row</span><span class="token punctuation">(</span>                    children<span class="token punctuation">:</span> <span class="token operator">&lt;</span>Widget<span class="token operator">></span><span class="token punctuation">[</span>                      <span class="token function">Expanded</span><span class="token punctuation">(</span>                        child<span class="token punctuation">:</span> <span class="token function">Text</span><span class="token punctuation">(</span>                          cellModel<span class="token punctuation">.</span>title<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 歌单名称</span>                          maxLines<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>                          style<span class="token punctuation">:</span> <span class="token function">TextStyle</span><span class="token punctuation">(</span>                            color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>black<span class="token punctuation">,</span>                            fontSize<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">,</span>                            fontWeight<span class="token punctuation">:</span> FontWeight<span class="token punctuation">.</span>bold<span class="token punctuation">,</span>                          <span class="token punctuation">)</span><span class="token punctuation">,</span>                        <span class="token punctuation">)</span><span class="token punctuation">,</span>                      <span class="token punctuation">)</span><span class="token punctuation">,</span>                    <span class="token punctuation">]</span><span class="token punctuation">,</span>                  <span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token function">Container</span><span class="token punctuation">(</span>                  height<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">,</span>                  padding<span class="token punctuation">:</span> EdgeInsets<span class="token punctuation">.</span><span class="token function">only</span><span class="token punctuation">(</span>left<span class="token punctuation">:</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                  child<span class="token punctuation">:</span> <span class="token function">Row</span><span class="token punctuation">(</span>                    children<span class="token punctuation">:</span> <span class="token operator">&lt;</span>Widget<span class="token operator">></span><span class="token punctuation">[</span>                      <span class="token function">ClipOval</span><span class="token punctuation">(</span>                        child<span class="token punctuation">:</span> <span class="token function">Container</span><span class="token punctuation">(</span>                          width<span class="token punctuation">:</span> <span class="token number">24</span><span class="token punctuation">,</span>                          height<span class="token punctuation">:</span> <span class="token number">24</span><span class="token punctuation">,</span>                          decoration<span class="token punctuation">:</span> <span class="token function">BoxDecoration</span><span class="token punctuation">(</span>                            color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>greenAccent<span class="token punctuation">,</span>                            borderRadius<span class="token punctuation">:</span> BorderRadius<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>Radius<span class="token punctuation">.</span><span class="token function">circular</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                          <span class="token punctuation">)</span><span class="token punctuation">,</span>                          child<span class="token punctuation">:</span> Image<span class="token punctuation">.</span><span class="token function">network</span><span class="token punctuation">(</span>cellModel<span class="token punctuation">.</span>avatarUrl<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 歌单作者图片</span>                        <span class="token punctuation">)</span><span class="token punctuation">,</span>                      <span class="token punctuation">)</span><span class="token punctuation">,</span>                      <span class="token function">SizedBox</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                      <span class="token function">RichText</span><span class="token punctuation">(</span>                        text<span class="token punctuation">:</span> <span class="token function">TextSpan</span><span class="token punctuation">(</span>                          style<span class="token punctuation">:</span> <span class="token function">TextStyle</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>black<span class="token punctuation">,</span> fontSize<span class="token punctuation">:</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                          children<span class="token punctuation">:</span> <span class="token operator">&lt;</span>TextSpan<span class="token operator">></span><span class="token punctuation">[</span>                            <span class="token function">TextSpan</span><span class="token punctuation">(</span>text<span class="token punctuation">:</span> <span class="token string">'来自'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                            <span class="token function">TextSpan</span><span class="token punctuation">(</span>                              text<span class="token punctuation">:</span> <span class="token string">' ${cellModel.userName} '</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 歌单作者名称</span>                              style<span class="token punctuation">:</span> <span class="token function">TextStyle</span><span class="token punctuation">(</span>fontWeight<span class="token punctuation">:</span> FontWeight<span class="token punctuation">.</span>bold<span class="token punctuation">)</span><span class="token punctuation">,</span>                            <span class="token punctuation">)</span><span class="token punctuation">,</span>                            <span class="token function">TextSpan</span><span class="token punctuation">(</span>text<span class="token punctuation">:</span> <span class="token string">'的推荐'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                          <span class="token punctuation">]</span><span class="token punctuation">,</span>                        <span class="token punctuation">)</span><span class="token punctuation">,</span>                      <span class="token punctuation">)</span><span class="token punctuation">,</span>                    <span class="token punctuation">]</span><span class="token punctuation">,</span>                  <span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token function">SizedBox</span><span class="token punctuation">(</span>height<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token function">ClipRRect</span><span class="token punctuation">(</span>                  clipBehavior<span class="token punctuation">:</span> Clip<span class="token punctuation">.</span>antiAlias<span class="token punctuation">,</span>                  borderRadius<span class="token punctuation">:</span> BorderRadius<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>Radius<span class="token punctuation">.</span><span class="token function">circular</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                  child<span class="token punctuation">:</span> <span class="token function">Container</span><span class="token punctuation">(</span>                    height<span class="token punctuation">:</span> <span class="token number">260</span><span class="token punctuation">,</span>                    decoration<span class="token punctuation">:</span> <span class="token function">BoxDecoration</span><span class="token punctuation">(</span>                      color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>pinkAccent<span class="token punctuation">,</span>                    <span class="token punctuation">)</span><span class="token punctuation">,</span>                    child<span class="token punctuation">:</span> <span class="token function">Column</span><span class="token punctuation">(</span>                      children<span class="token punctuation">:</span> <span class="token operator">&lt;</span>Widget<span class="token operator">></span><span class="token punctuation">[</span>                        <span class="token function">Container</span><span class="token punctuation">(</span>                          child<span class="token punctuation">:</span> Image<span class="token punctuation">.</span><span class="token function">network</span><span class="token punctuation">(</span>                            cellModel<span class="token punctuation">.</span>imgUrl<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 歌单图片</span>                            height<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">,</span>                            width<span class="token punctuation">:</span> double<span class="token punctuation">.</span>infinity<span class="token punctuation">,</span>                            fit<span class="token punctuation">:</span> BoxFit<span class="token punctuation">.</span>cover<span class="token punctuation">,</span>                          <span class="token punctuation">)</span><span class="token punctuation">,</span>                        <span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">// 省略部分代码</span></code></pre><p>接下来我们需要一个网络库来加载网络数据，我选择<a href="https://pub.dev/packages/dio#-installing-tab-" target="_blank" rel="noopener">dio</a>，在<code>pubspec.yaml</code>文件添加dio依赖，然后运行<code>flutter pub get</code>进行安装。</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">dependencies</span><span class="token punctuation">:</span>  <span class="token key atrule">flutter</span><span class="token punctuation">:</span>    <span class="token key atrule">sdk</span><span class="token punctuation">:</span> flutter  <span class="token comment" spellcheck="true"># iOS风格图标</span>  <span class="token key atrule">cupertino_icons</span><span class="token punctuation">:</span> ^0.1.2  <span class="token comment" spellcheck="true"># 多语言库，时间格式化工具</span>  <span class="token key atrule">intl</span><span class="token punctuation">:</span> ^0.16.1  <span class="token comment" spellcheck="true"># 网络库</span>  <span class="token key atrule">dio</span><span class="token punctuation">:</span> ^3.0.9</code></pre><p>有了网络库，我们就可以加载网络数据了，下面切换到<code>tab_recommend_page.dart</code>文件，</p><p>代码如下：</p><pre class=" language-dart"><code class="language-dart"><span class="token keyword">import</span> <span class="token string">'package:flutter/material.dart'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'package:evo/recommend_page/model/recommend_model.dart'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'package:evo/recommend_page/ui/tab_recommend_page_cell.dart'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'package:evo/recommend_page/ui/tab_recommend_page_header.dart'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'package:dio/dio.dart'</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">TabRecommendPage</span> <span class="token keyword">extends</span> <span class="token class-name">StatefulWidget</span> <span class="token punctuation">{</span>  <span class="token metadata symbol">@override</span>  _TabRecommendPageState <span class="token function">createState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">_TabRecommendPageState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">_TabRecommendPageState</span> <span class="token keyword">extends</span> <span class="token class-name">State</span><span class="token operator">&lt;</span>TabRecommendPage<span class="token operator">></span> <span class="token punctuation">{</span>  List<span class="token operator">&lt;</span>RecommendModel<span class="token operator">></span> dataSourceItems <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token metadata symbol">@override</span>  <span class="token keyword">void</span> <span class="token function">didChangeDependencies</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">loadData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">didChangeDependencies</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token metadata symbol">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> ListView<span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span>      itemCount<span class="token punctuation">:</span> dataSourceItems<span class="token punctuation">.</span>length <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>      itemBuilder<span class="token punctuation">:</span> <span class="token punctuation">(</span>_<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token keyword">return</span> <span class="token function">TabRecommendPageHeader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>          <span class="token keyword">return</span> <span class="token function">TabRecommendPageCell</span><span class="token punctuation">(</span>cellModel<span class="token punctuation">:</span> dataSourceItems<span class="token punctuation">[</span>index <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">void</span> <span class="token function">loadData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token punctuation">{</span>    Dio dio <span class="token operator">=</span> <span class="token function">Dio</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Response<span class="token operator">&lt;</span>Map<span class="token operator">></span> response <span class="token operator">=</span> <span class="token keyword">await</span> dio<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span>        <span class="token string">'http://www.lavaradio.com/api/radio.listGroundPrograms.json?_pn=3&amp;_sz=20'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">print</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">[</span><span class="token string">'err'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'hapn.ok'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">'Request success'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      Map resultData <span class="token operator">=</span> response<span class="token punctuation">.</span>data<span class="token punctuation">[</span><span class="token string">'data'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>resultData <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">print</span><span class="token punctuation">(</span>            <span class="token string">'Request result data size:${resultData['</span>size<span class="token string">']}, total:${resultData['</span>total<span class="token string">']}'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        List dataList <span class="token operator">=</span> resultData<span class="token punctuation">[</span><span class="token string">'lists'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>dataList <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> dataList<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          List<span class="token operator">&lt;</span>RecommendModel<span class="token operator">></span> newModels <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>          <span class="token keyword">for</span> <span class="token punctuation">(</span>Map item <span class="token keyword">in</span> dataList<span class="token punctuation">)</span> <span class="token punctuation">{</span>            RecommendModel model <span class="token operator">=</span> <span class="token function">RecommendModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            model<span class="token punctuation">.</span>id <span class="token operator">=</span> item<span class="token punctuation">[</span><span class="token string">'program_id'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            model<span class="token punctuation">.</span>title <span class="token operator">=</span> item<span class="token punctuation">[</span><span class="token string">'program_name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            model<span class="token punctuation">.</span>imgUrl <span class="token operator">=</span> item<span class="token punctuation">[</span><span class="token string">'pic_url'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            model<span class="token punctuation">.</span>userName <span class="token operator">=</span> item<span class="token punctuation">[</span><span class="token string">'user'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'uname'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            model<span class="token punctuation">.</span>avatarUrl <span class="token operator">=</span> item<span class="token punctuation">[</span><span class="token string">'user'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'pic_url'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            newModels<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>model<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>          dataSourceItems<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            dataSourceItems<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>newModels<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="代码解释-6"><a href="#代码解释-6" class="headerlink" title="代码解释"></a>代码解释</h4><ol><li>使用dio加载LavaRadio的精选歌单接口</li><li>成功获取到数据后装载到<code>List&lt;RecommendModel&gt; dataSourceItems</code>，然后通过setState刷新页面。</li><li>因为ListView有个单独header cell，所有itemCount的值是dataSourceItems.length + 1。</li></ol><p>TopBar上面的<code>Second Page</code>看着不顺眼，先改掉吧，字体改成26号。</p><p>另外再把Second Page设置为默认显示页。</p><p>top_bar.dart</p><pre class=" language-dart"><code class="language-dart"><span class="token function">Text</span><span class="token punctuation">(</span>  title<span class="token punctuation">,</span>  style<span class="token punctuation">:</span> <span class="token function">TextStyle</span><span class="token punctuation">(</span>    color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>black<span class="token punctuation">,</span>    fontSize<span class="token punctuation">:</span> <span class="token number">26</span><span class="token punctuation">,</span>    fontWeight<span class="token punctuation">:</span> FontWeight<span class="token punctuation">.</span>bold<span class="token punctuation">,</span>  <span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span></code></pre><p>main.dart</p><pre class=" language-dart"><code class="language-dart"><span class="token keyword">class</span> <span class="token class-name">_MyHomePageState</span> <span class="token keyword">extends</span> <span class="token class-name">State</span><span class="token operator">&lt;</span>MyHomePage<span class="token operator">></span>    <span class="token keyword">with</span> SingleTickerProviderStateMixin <span class="token punctuation">{</span>  TabController _tabController<span class="token punctuation">;</span>  int _currentIndex<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 下标</span>  String _topBarTitle<span class="token punctuation">;</span>  <span class="token keyword">final</span> List<span class="token operator">&lt;</span>String<span class="token operator">></span> _topBarTitles <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'私人兆赫'</span><span class="token punctuation">,</span> <span class="token string">'今天'</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 新title</span>  <span class="token metadata symbol">@override</span>  <span class="token keyword">void</span> <span class="token function">initState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">initState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    _currentIndex <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    _topBarTitle <span class="token operator">=</span> _topBarTitles<span class="token punctuation">[</span>_currentIndex<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 初始化TabBarView长度并设置初始位置</span>    _tabController <span class="token operator">=</span> <span class="token function">TabController</span><span class="token punctuation">(</span>length<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> vsync<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">,</span> initialIndex<span class="token punctuation">:</span> _currentIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>    _tabController<span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span>_handleTabController<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token metadata symbol">@override</span>  <span class="token keyword">void</span> <span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    _tabController<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token metadata symbol">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">DefaultTabController</span><span class="token punctuation">(</span>      length<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>      initialIndex<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>      child<span class="token punctuation">:</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>        appBar<span class="token punctuation">:</span> <span class="token function">TopBar</span><span class="token punctuation">(</span>          title<span class="token punctuation">:</span> _topBarTitle<span class="token punctuation">,</span>          onTitleTapped<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">'Tap title'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span><span class="token punctuation">,</span>          indicatorLength<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>          indicatorIndex<span class="token punctuation">:</span> _currentIndex<span class="token punctuation">,</span>          children<span class="token punctuation">:</span> <span class="token operator">&lt;</span>Widget<span class="token operator">></span><span class="token punctuation">[</span>            <span class="token function">IconButton</span><span class="token punctuation">(</span>              iconSize<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">,</span>              icon<span class="token punctuation">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>search<span class="token punctuation">,</span> size<span class="token punctuation">:</span> <span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">,</span>              onPressed<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token function">IconButton</span><span class="token punctuation">(</span>              iconSize<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">,</span>              icon<span class="token punctuation">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>person_outline<span class="token punctuation">,</span> size<span class="token punctuation">:</span> <span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">,</span>              onPressed<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>        body<span class="token punctuation">:</span> <span class="token function">TabBarView</span><span class="token punctuation">(</span>          controller<span class="token punctuation">:</span> _tabController<span class="token punctuation">,</span>          children<span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token function">Container</span><span class="token punctuation">(</span>              color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>redAccent<span class="token punctuation">,</span>              child<span class="token punctuation">:</span> <span class="token function">Center</span><span class="token punctuation">(</span>                child<span class="token punctuation">:</span> <span class="token function">Text</span><span class="token punctuation">(</span>                  _topBarTitles<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                  style<span class="token punctuation">:</span> <span class="token function">TextStyle</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>white<span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token punctuation">)</span><span class="token punctuation">,</span>              <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token function">TabRecommendPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">void</span> <span class="token function">_handleTabController</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">final</span> int index <span class="token operator">=</span> _tabController<span class="token punctuation">.</span>index<span class="token punctuation">;</span>    <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      _currentIndex <span class="token operator">=</span> index<span class="token punctuation">;</span>      _topBarTitle <span class="token operator">=</span> _topBarTitles<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>我们预览一下当前的效果。</p><a href="http://q8ffj20b0.bkt.clouddn.com/blog/2020-04-07-163853.jpg" data-fancybox="group" data-caption="IMG_1B941DC83DD8-1" class="fancybox"><img alt="IMG_1B941DC83DD8-1" style="zoom: 25%;" title="IMG_1B941DC83DD8-1" data-src="http://q8ffj20b0.bkt.clouddn.com/blog/2020-04-07-163853.jpg" class="lazyload"></a><p>提交一下代码：</p><pre class=" language-shell"><code class="language-shell">git commit -m '使用dio加载网络数据'</code></pre><h3 id="Json序列化-反序列化"><a href="#Json序列化-反序列化" class="headerlink" title="Json序列化/反序列化"></a>Json序列化/反序列化</h3><p>接口数据除了RecommendModel封装的几个简单属性之外，还有很多需要要用到的字段，如果一个个手写出来，显然太累了，这时我们就要借助一下工具来处理一下了，接下来我们就用built_value对数据进行序列化。</p><p>参考链接 <a href="https://www.stacksecrets.com/flutter/how-to-use-built_value-library" target="_blank" rel="noopener">Sample</a> <a href="https://www.stacksecrets.com/flutter/introduction-to-built_value-library-in-dart" target="_blank" rel="noopener">Introduction</a></p><p>首先需要在文件<code>pubspec.yaml</code>中添加built_value依赖，以及两个辅助工具的依赖<code>build_runner</code>和<code>built_value_generator</code>，运行<code>flutter pub. get</code>进行安装。</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">dependencies</span><span class="token punctuation">:</span>  <span class="token key atrule">flutter</span><span class="token punctuation">:</span>    <span class="token key atrule">sdk</span><span class="token punctuation">:</span> flutter  <span class="token comment" spellcheck="true"># iOS风格图标</span>  <span class="token key atrule">cupertino_icons</span><span class="token punctuation">:</span> ^0.1.2  <span class="token comment" spellcheck="true"># 多语言库，时间格式化工具</span>  <span class="token key atrule">intl</span><span class="token punctuation">:</span> ^0.16.1  <span class="token comment" spellcheck="true"># 网络库</span>  <span class="token key atrule">dio</span><span class="token punctuation">:</span> ^3.0.9  <span class="token comment" spellcheck="true"># JSON序列化/反序列化</span>  <span class="token key atrule">built_value</span><span class="token punctuation">:</span> ^7.0.9<span class="token key atrule">dev_dependencies</span><span class="token punctuation">:</span>  <span class="token key atrule">flutter_test</span><span class="token punctuation">:</span>    <span class="token key atrule">sdk</span><span class="token punctuation">:</span> flutter  <span class="token comment" spellcheck="true"># JSON序列化/反序列化 辅助工具</span>  <span class="token key atrule">build_runner</span><span class="token punctuation">:</span> ^1.8.1  <span class="token key atrule">built_value_generator</span><span class="token punctuation">:</span> ^7.0.9</code></pre><p>然后让RecommendModel实现Built抽象类，具体代码如下</p><pre class=" language-dart"><code class="language-dart"><span class="token keyword">import</span> <span class="token string">'package:built_value/built_value.dart'</span><span class="token punctuation">;</span><span class="token keyword">part</span> <span class="token string">'recommend_model.g.dart'</span><span class="token punctuation">;</span><span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">RecommendModel</span>    <span class="token keyword">implements</span> <span class="token class-name">Built</span><span class="token operator">&lt;</span>RecommendModel<span class="token punctuation">,</span> RecommendModelBuilder<span class="token operator">></span> <span class="token punctuation">{</span>  RecommendModel<span class="token punctuation">.</span><span class="token function">_</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">factory</span> <span class="token function">RecommendModel</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token function">updates</span><span class="token punctuation">(</span>RecommendModelBuilder b<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=</span> _$RecommendModel<span class="token punctuation">;</span>  String <span class="token keyword">get</span> id<span class="token punctuation">;</span>  String <span class="token keyword">get</span> title<span class="token punctuation">;</span>  String <span class="token keyword">get</span> avatarUrl<span class="token punctuation">;</span>  String <span class="token keyword">get</span> userName<span class="token punctuation">;</span>  String <span class="token keyword">get</span> imgUrl<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>然后在Terminal中运行一下命令，就会自动生成一个<code>recommend_model.g.dart</code>文件。</p><pre class=" language-shell"><code class="language-shell">flutter packages pub run build_runner build</code></pre><p>g.dart包含了模型所有属性的getter、setter和构造方法，因为是自动生成的，所以我们可以把g.dart文件加到.gitignore文件中，不需要提交git。</p><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># built_value</span>*.g.dart</code></pre><p>接着我们继续把接口的数据结构也封装成模型，这里可以借助这个<a href="https://charafau.github.io/json2builtvalue/" target="_blank" rel="noopener">json转dart</a>代码的网站，把接口返回的json字符串转换成dart代码，然后分拆到model目录下的各个model中。下面是我处理后的结果</p><p>lava_result.dart</p><pre class=" language-dart"><code class="language-dart"><span class="token keyword">import</span> <span class="token string">'dart:convert'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'package:built_collection/built_collection.dart'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'package:built_value/built_value.dart'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'package:built_value/serializer.dart'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'package:evo/recommend_page/model/lava_program.dart'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'package:evo/recommend_page/model/lava_serializers.dart'</span><span class="token punctuation">;</span><span class="token keyword">part</span> <span class="token string">'lava_result.g.dart'</span><span class="token punctuation">;</span><span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">LavaResult</span> <span class="token keyword">implements</span> <span class="token class-name">Built</span><span class="token operator">&lt;</span>LavaResult<span class="token punctuation">,</span> LavaResultBuilder<span class="token operator">></span> <span class="token punctuation">{</span>  LavaResult<span class="token punctuation">.</span><span class="token function">_</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">factory</span> <span class="token function">LavaResult</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token function">updates</span><span class="token punctuation">(</span>LavaResultBuilder b<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=</span> _$LavaResult<span class="token punctuation">;</span>  <span class="token metadata symbol">@BuiltValueField</span><span class="token punctuation">(</span>wireName<span class="token punctuation">:</span> <span class="token string">'err'</span><span class="token punctuation">)</span>  String <span class="token keyword">get</span> err<span class="token punctuation">;</span>  <span class="token metadata symbol">@BuiltValueField</span><span class="token punctuation">(</span>wireName<span class="token punctuation">:</span> <span class="token string">'data'</span><span class="token punctuation">)</span>  LavaData <span class="token keyword">get</span> data<span class="token punctuation">;</span>  String <span class="token function">toJson</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> json<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>serializers<span class="token punctuation">.</span><span class="token function">serializeWith</span><span class="token punctuation">(</span>LavaResult<span class="token punctuation">.</span>serializer<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">static</span> LavaResult <span class="token function">fromJson</span><span class="token punctuation">(</span>String jsonString<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> serializers<span class="token punctuation">.</span><span class="token function">deserializeWith</span><span class="token punctuation">(</span>        LavaResult<span class="token punctuation">.</span>serializer<span class="token punctuation">,</span> <span class="token function">jsonDecode</span><span class="token punctuation">(</span>jsonString<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">static</span> LavaResult <span class="token function">fromMap</span><span class="token punctuation">(</span>Map map<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> serializers<span class="token punctuation">.</span><span class="token function">deserializeWith</span><span class="token punctuation">(</span>LavaResult<span class="token punctuation">.</span>serializer<span class="token punctuation">,</span> map<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">static</span> Serializer<span class="token operator">&lt;</span>LavaResult<span class="token operator">></span> <span class="token keyword">get</span> serializer <span class="token operator">=</span><span class="token operator">></span> _$lavaResultSerializer<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">LavaData</span> <span class="token keyword">implements</span> <span class="token class-name">Built</span><span class="token operator">&lt;</span>LavaData<span class="token punctuation">,</span> LavaDataBuilder<span class="token operator">></span> <span class="token punctuation">{</span>  LavaData<span class="token punctuation">.</span><span class="token function">_</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">factory</span> <span class="token function">LavaData</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token function">updates</span><span class="token punctuation">(</span>LavaDataBuilder b<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=</span> _$LavaData<span class="token punctuation">;</span>  <span class="token metadata symbol">@BuiltValueField</span><span class="token punctuation">(</span>wireName<span class="token punctuation">:</span> <span class="token string">'size'</span><span class="token punctuation">)</span>  String <span class="token keyword">get</span> size<span class="token punctuation">;</span>  <span class="token metadata symbol">@BuiltValueField</span><span class="token punctuation">(</span>wireName<span class="token punctuation">:</span> <span class="token string">'total'</span><span class="token punctuation">)</span>  int <span class="token keyword">get</span> total<span class="token punctuation">;</span>  <span class="token metadata symbol">@BuiltValueField</span><span class="token punctuation">(</span>wireName<span class="token punctuation">:</span> <span class="token string">'lists'</span><span class="token punctuation">)</span>  BuiltList<span class="token operator">&lt;</span>LavaProgram<span class="token operator">></span> <span class="token keyword">get</span> lists<span class="token punctuation">;</span>  String <span class="token function">toJson</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> json<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>serializers<span class="token punctuation">.</span><span class="token function">serializeWith</span><span class="token punctuation">(</span>LavaData<span class="token punctuation">.</span>serializer<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">static</span> LavaData <span class="token function">fromJson</span><span class="token punctuation">(</span>String jsonString<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> serializers<span class="token punctuation">.</span><span class="token function">deserializeWith</span><span class="token punctuation">(</span>        LavaData<span class="token punctuation">.</span>serializer<span class="token punctuation">,</span> json<span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>jsonString<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">static</span> Serializer<span class="token operator">&lt;</span>LavaData<span class="token operator">></span> <span class="token keyword">get</span> serializer <span class="token operator">=</span><span class="token operator">></span> _$lavaDataSerializer<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>lava_program.dart</p><pre class=" language-dart"><code class="language-dart"><span class="token keyword">import</span> <span class="token string">'dart:convert'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'package:built_collection/built_collection.dart'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'package:built_value/built_value.dart'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'package:built_value/serializer.dart'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'package:evo/recommend_page/model/lava_channel.dart'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'package:evo/recommend_page/model/lava_user.dart'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'package:evo/recommend_page/model/lava_serializers.dart'</span><span class="token punctuation">;</span><span class="token keyword">part</span> <span class="token string">'lava_program.g.dart'</span><span class="token punctuation">;</span><span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">LavaProgram</span> <span class="token keyword">implements</span> <span class="token class-name">Built</span><span class="token operator">&lt;</span>LavaProgram<span class="token punctuation">,</span> LavaProgramBuilder<span class="token operator">></span> <span class="token punctuation">{</span>  LavaProgram<span class="token punctuation">.</span><span class="token function">_</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">factory</span> <span class="token function">LavaProgram</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token function">updates</span><span class="token punctuation">(</span>LavaProgramBuilder b<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=</span> _$LavaProgram<span class="token punctuation">;</span>  <span class="token metadata symbol">@BuiltValueField</span><span class="token punctuation">(</span>wireName<span class="token punctuation">:</span> <span class="token string">'program_id'</span><span class="token punctuation">)</span>  String <span class="token keyword">get</span> programId<span class="token punctuation">;</span>  <span class="token metadata symbol">@BuiltValueField</span><span class="token punctuation">(</span>wireName<span class="token punctuation">:</span> <span class="token string">'program_name'</span><span class="token punctuation">)</span>  String <span class="token keyword">get</span> programName<span class="token punctuation">;</span>  <span class="token metadata symbol">@BuiltValueField</span><span class="token punctuation">(</span>wireName<span class="token punctuation">:</span> <span class="token string">'program_desc'</span><span class="token punctuation">)</span>  String <span class="token keyword">get</span> programDesc<span class="token punctuation">;</span>  <span class="token metadata symbol">@BuiltValueField</span><span class="token punctuation">(</span>wireName<span class="token punctuation">:</span> <span class="token string">'uid'</span><span class="token punctuation">)</span>  String <span class="token keyword">get</span> uid<span class="token punctuation">;</span>  <span class="token metadata symbol">@BuiltValueField</span><span class="token punctuation">(</span>wireName<span class="token punctuation">:</span> <span class="token string">'create_time'</span><span class="token punctuation">)</span>  String <span class="token keyword">get</span> createTime<span class="token punctuation">;</span>  <span class="token metadata symbol">@BuiltValueField</span><span class="token punctuation">(</span>wireName<span class="token punctuation">:</span> <span class="token string">'modify_time'</span><span class="token punctuation">)</span>  String <span class="token keyword">get</span> modifyTime<span class="token punctuation">;</span>  <span class="token metadata symbol">@BuiltValueField</span><span class="token punctuation">(</span>wireName<span class="token punctuation">:</span> <span class="token string">'song_num'</span><span class="token punctuation">)</span>  String <span class="token keyword">get</span> songNum<span class="token punctuation">;</span>  <span class="token metadata symbol">@BuiltValueField</span><span class="token punctuation">(</span>wireName<span class="token punctuation">:</span> <span class="token string">'status'</span><span class="token punctuation">)</span>  String <span class="token keyword">get</span> status<span class="token punctuation">;</span>  <span class="token metadata symbol">@BuiltValueField</span><span class="token punctuation">(</span>wireName<span class="token punctuation">:</span> <span class="token string">'duration'</span><span class="token punctuation">)</span>  String <span class="token keyword">get</span> duration<span class="token punctuation">;</span>  <span class="token metadata symbol">@BuiltValueField</span><span class="token punctuation">(</span>wireName<span class="token punctuation">:</span> <span class="token string">'key'</span><span class="token punctuation">)</span>  String <span class="token keyword">get</span> key<span class="token punctuation">;</span>  <span class="token metadata symbol">@BuiltValueField</span><span class="token punctuation">(</span>wireName<span class="token punctuation">:</span> <span class="token string">'channels'</span><span class="token punctuation">)</span>  BuiltList<span class="token operator">&lt;</span>LavaChannel<span class="token operator">></span> <span class="token keyword">get</span> channels<span class="token punctuation">;</span>  <span class="token metadata symbol">@BuiltValueField</span><span class="token punctuation">(</span>wireName<span class="token punctuation">:</span> <span class="token string">'user'</span><span class="token punctuation">)</span>  LavaUser <span class="token keyword">get</span> user<span class="token punctuation">;</span>  <span class="token metadata symbol">@BuiltValueField</span><span class="token punctuation">(</span>wireName<span class="token punctuation">:</span> <span class="token string">'pic_url'</span><span class="token punctuation">)</span>  String <span class="token keyword">get</span> picUrl<span class="token punctuation">;</span>  String <span class="token function">toJson</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> json<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>serializers<span class="token punctuation">.</span><span class="token function">serializeWith</span><span class="token punctuation">(</span>LavaProgram<span class="token punctuation">.</span>serializer<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">static</span> LavaProgram <span class="token function">fromJson</span><span class="token punctuation">(</span>String jsonString<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> serializers<span class="token punctuation">.</span><span class="token function">deserializeWith</span><span class="token punctuation">(</span>        LavaProgram<span class="token punctuation">.</span>serializer<span class="token punctuation">,</span> json<span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>jsonString<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">static</span> Serializer<span class="token operator">&lt;</span>LavaProgram<span class="token operator">></span> <span class="token keyword">get</span> serializer <span class="token operator">=</span><span class="token operator">></span> _$lavaProgramSerializer<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>lava_channel.dart</p><pre class=" language-dart"><code class="language-dart"><span class="token keyword">import</span> <span class="token string">'dart:convert'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'package:built_value/built_value.dart'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'package:built_value/serializer.dart'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'package:evo/recommend_page/model/lava_serializers.dart'</span><span class="token punctuation">;</span><span class="token keyword">part</span> <span class="token string">'lava_channel.g.dart'</span><span class="token punctuation">;</span><span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">LavaChannel</span> <span class="token keyword">implements</span> <span class="token class-name">Built</span><span class="token operator">&lt;</span>LavaChannel<span class="token punctuation">,</span> LavaChannelBuilder<span class="token operator">></span> <span class="token punctuation">{</span>  LavaChannel<span class="token punctuation">.</span><span class="token function">_</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">factory</span> <span class="token function">LavaChannel</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token function">updates</span><span class="token punctuation">(</span>LavaChannelBuilder b<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=</span> _$LavaChannel<span class="token punctuation">;</span>  <span class="token metadata symbol">@BuiltValueField</span><span class="token punctuation">(</span>wireName<span class="token punctuation">:</span> <span class="token string">'recommend'</span><span class="token punctuation">)</span>  String <span class="token keyword">get</span> recommend<span class="token punctuation">;</span>  <span class="token metadata symbol">@BuiltValueField</span><span class="token punctuation">(</span>wireName<span class="token punctuation">:</span> <span class="token string">'channel_id'</span><span class="token punctuation">)</span>  String <span class="token keyword">get</span> channelId<span class="token punctuation">;</span>  <span class="token metadata symbol">@BuiltValueField</span><span class="token punctuation">(</span>wireName<span class="token punctuation">:</span> <span class="token string">'radio_id'</span><span class="token punctuation">)</span>  String <span class="token keyword">get</span> radioId<span class="token punctuation">;</span>  <span class="token metadata symbol">@BuiltValueField</span><span class="token punctuation">(</span>wireName<span class="token punctuation">:</span> <span class="token string">'channel_name'</span><span class="token punctuation">)</span>  String <span class="token keyword">get</span> channelName<span class="token punctuation">;</span>  <span class="token metadata symbol">@BuiltValueField</span><span class="token punctuation">(</span>wireName<span class="token punctuation">:</span> <span class="token string">'english_name'</span><span class="token punctuation">)</span>  String <span class="token keyword">get</span> englishName<span class="token punctuation">;</span>  <span class="token metadata symbol">@BuiltValueField</span><span class="token punctuation">(</span>wireName<span class="token punctuation">:</span> <span class="token string">'channel_desc'</span><span class="token punctuation">)</span>  String <span class="token keyword">get</span> channelDesc<span class="token punctuation">;</span>  <span class="token metadata symbol">@BuiltValueField</span><span class="token punctuation">(</span>wireName<span class="token punctuation">:</span> <span class="token string">'rank'</span><span class="token punctuation">)</span>  String <span class="token keyword">get</span> rank<span class="token punctuation">;</span>  <span class="token metadata symbol">@BuiltValueField</span><span class="token punctuation">(</span>wireName<span class="token punctuation">:</span> <span class="token string">'color'</span><span class="token punctuation">)</span>  String <span class="token keyword">get</span> color<span class="token punctuation">;</span>  <span class="token metadata symbol">@BuiltValueField</span><span class="token punctuation">(</span>wireName<span class="token punctuation">:</span> <span class="token string">'pic_url'</span><span class="token punctuation">)</span>  String <span class="token keyword">get</span> picUrl<span class="token punctuation">;</span>  String <span class="token function">toJson</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> json<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>serializers<span class="token punctuation">.</span><span class="token function">serializeWith</span><span class="token punctuation">(</span>LavaChannel<span class="token punctuation">.</span>serializer<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">static</span> LavaChannel <span class="token function">fromJson</span><span class="token punctuation">(</span>String jsonString<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> serializers<span class="token punctuation">.</span><span class="token function">deserializeWith</span><span class="token punctuation">(</span>        LavaChannel<span class="token punctuation">.</span>serializer<span class="token punctuation">,</span> json<span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>jsonString<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">static</span> Serializer<span class="token operator">&lt;</span>LavaChannel<span class="token operator">></span> <span class="token keyword">get</span> serializer <span class="token operator">=</span><span class="token operator">></span> _$lavaChannelSerializer<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>lava_user.dart</p><pre class=" language-dart"><code class="language-dart"><span class="token keyword">import</span> <span class="token string">'dart:convert'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'package:built_value/built_value.dart'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'package:built_value/serializer.dart'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'package:evo/recommend_page/model/lava_serializers.dart'</span><span class="token punctuation">;</span><span class="token keyword">part</span> <span class="token string">'lava_user.g.dart'</span><span class="token punctuation">;</span><span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">LavaUser</span> <span class="token keyword">implements</span> <span class="token class-name">Built</span><span class="token operator">&lt;</span>LavaUser<span class="token punctuation">,</span> LavaUserBuilder<span class="token operator">></span> <span class="token punctuation">{</span>  LavaUser<span class="token punctuation">.</span><span class="token function">_</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">factory</span> <span class="token function">LavaUser</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token function">updates</span><span class="token punctuation">(</span>LavaUserBuilder b<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=</span> _$LavaUser<span class="token punctuation">;</span>  <span class="token metadata symbol">@BuiltValueField</span><span class="token punctuation">(</span>wireName<span class="token punctuation">:</span> <span class="token string">'uid'</span><span class="token punctuation">)</span>  String <span class="token keyword">get</span> uid<span class="token punctuation">;</span>  <span class="token metadata symbol">@BuiltValueField</span><span class="token punctuation">(</span>wireName<span class="token punctuation">:</span> <span class="token string">'uname'</span><span class="token punctuation">)</span>  String <span class="token keyword">get</span> uname<span class="token punctuation">;</span>  <span class="token metadata symbol">@BuiltValueField</span><span class="token punctuation">(</span>wireName<span class="token punctuation">:</span> <span class="token string">'user_type'</span><span class="token punctuation">)</span>  String <span class="token keyword">get</span> userType<span class="token punctuation">;</span>  <span class="token metadata symbol">@BuiltValueField</span><span class="token punctuation">(</span>wireName<span class="token punctuation">:</span> <span class="token string">'pic_url'</span><span class="token punctuation">)</span>  String <span class="token keyword">get</span> picUrl<span class="token punctuation">;</span>  String <span class="token function">toJson</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> json<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>serializers<span class="token punctuation">.</span><span class="token function">serializeWith</span><span class="token punctuation">(</span>LavaUser<span class="token punctuation">.</span>serializer<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">static</span> LavaUser <span class="token function">fromJson</span><span class="token punctuation">(</span>String jsonString<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> serializers<span class="token punctuation">.</span><span class="token function">deserializeWith</span><span class="token punctuation">(</span>        LavaUser<span class="token punctuation">.</span>serializer<span class="token punctuation">,</span> json<span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>jsonString<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">static</span> Serializer<span class="token operator">&lt;</span>LavaUser<span class="token operator">></span> <span class="token keyword">get</span> serializer <span class="token operator">=</span><span class="token operator">></span> _$lavaUserSerializer<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>除了上述model之外，我们还需要一个总的Serializers来处理序列化和反序列化的程序，代码如下</p><p>lava_serializers.dart</p><pre class=" language-dart"><code class="language-dart"><span class="token keyword">import</span> <span class="token string">'package:built_collection/built_collection.dart'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'package:built_value/serializer.dart'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'package:built_value/standard_json_plugin.dart'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'package:evo/recommend_page/model/lava_channel.dart'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'package:evo/recommend_page/model/lava_program.dart'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'package:evo/recommend_page/model/lava_result.dart'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'package:evo/recommend_page/model/lava_user.dart'</span><span class="token punctuation">;</span><span class="token keyword">part</span> <span class="token string">'lava_serializers.g.dart'</span><span class="token punctuation">;</span><span class="token metadata symbol">@SerializersFor</span><span class="token punctuation">(</span>  <span class="token punctuation">[</span>    LavaResult<span class="token punctuation">,</span>    LavaProgram<span class="token punctuation">,</span>    LavaChannel<span class="token punctuation">,</span>    LavaUser<span class="token punctuation">,</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token keyword">final</span> Serializers serializers <span class="token operator">=</span>    <span class="token punctuation">(</span>_$serializers<span class="token punctuation">.</span><span class="token function">toBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token function">addPlugin</span><span class="token punctuation">(</span><span class="token function">StandardJsonPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>model创建完成之后，再次运行built_value的生成命令，就可以得到所有model对应的g.dart文件了。</p><a href="http://q8ffj20b0.bkt.clouddn.com/blog/2020-04-07-163924.jpg" data-fancybox="group" data-caption="FF5EBDD2-B648-43D4-A5A4-3D16CF08EA3B" class="fancybox"><img alt="FF5EBDD2-B648-43D4-A5A4-3D16CF08EA3B" style="zoom:50%;" title="FF5EBDD2-B648-43D4-A5A4-3D16CF08EA3B" data-src="http://q8ffj20b0.bkt.clouddn.com/blog/2020-04-07-163924.jpg" class="lazyload"></a><p>最后我们改造一下接口响应数据的加载方式，就可以轻松获取到所有的接口数据了。</p><p>代码如下</p><pre class=" language-dart"><code class="language-dart">  <span class="token keyword">void</span> <span class="token function">loadData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token punctuation">{</span>    Dio dio <span class="token operator">=</span> <span class="token function">Dio</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Response response <span class="token operator">=</span> <span class="token keyword">await</span> dio<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span>      <span class="token string">'http://www.lavaradio.com/api/radio.listGroundPrograms.json?_pn=3&amp;_sz=20'</span><span class="token punctuation">,</span>      options<span class="token punctuation">:</span> <span class="token function">Options</span><span class="token punctuation">(</span>responseType<span class="token punctuation">:</span> ResponseType<span class="token punctuation">.</span>plain<span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">print</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>    LavaResult result <span class="token operator">=</span> LavaResult<span class="token punctuation">.</span><span class="token function">fromJson</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>err <span class="token operator">==</span> <span class="token string">'hapn.ok'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">'Request success'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      LavaData resultData <span class="token operator">=</span> result<span class="token punctuation">.</span>data<span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>resultData <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">print</span><span class="token punctuation">(</span>            <span class="token string">'Request result data size:${resultData.size}, total:${resultData.total}'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        BuiltList<span class="token operator">&lt;</span>LavaProgram<span class="token operator">></span> dataList <span class="token operator">=</span> resultData<span class="token punctuation">.</span>lists<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>dataList <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> dataList<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          List<span class="token operator">&lt;</span>RecommendModel<span class="token operator">></span> newModels <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>          <span class="token keyword">for</span> <span class="token punctuation">(</span>LavaProgram p <span class="token keyword">in</span> dataList<span class="token punctuation">)</span> <span class="token punctuation">{</span>            RecommendModel model <span class="token operator">=</span> <span class="token function">RecommendModel</span><span class="token punctuation">(</span><span class="token punctuation">(</span>builder<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> builder              <span class="token punctuation">.</span><span class="token punctuation">.</span>id <span class="token operator">=</span> p<span class="token punctuation">.</span>programId              <span class="token punctuation">.</span><span class="token punctuation">.</span>title <span class="token operator">=</span> p<span class="token punctuation">.</span>programName              <span class="token punctuation">.</span><span class="token punctuation">.</span>imgUrl <span class="token operator">=</span> p<span class="token punctuation">.</span>picUrl              <span class="token punctuation">.</span><span class="token punctuation">.</span>userName <span class="token operator">=</span> p<span class="token punctuation">.</span>user<span class="token punctuation">.</span>uname              <span class="token punctuation">.</span><span class="token punctuation">.</span>avatarUrl <span class="token operator">=</span> p<span class="token punctuation">.</span>user<span class="token punctuation">.</span>picUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>            newModels<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>model<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>          dataSourceItems<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            dataSourceItems<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>newModels<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>代码解释</p><ol><li>dio响应使用plain模式，返回json字符串</li><li>使用<code>LavaResult.fromJson</code>直接把字符串转换成模型</li><li>为了隔离Lava接口对UI的侵入，将LavaProgram转成RecommendModel再使用</li></ol><p>好像网络请求放在ui里有点不妥，我们把网络请求封装一下吧。</p><p>在lib目录下新建net目录，然后再新建一个lava_api.dart文件，把接口请求放到这里来。代码如下</p><pre class=" language-dart"><code class="language-dart"><span class="token keyword">import</span> <span class="token string">'package:dio/dio.dart'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'package:evo/recommend_page/model/lava_program.dart'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'package:evo/recommend_page/model/lava_result.dart'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'package:built_collection/built_collection.dart'</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">Lava</span> <span class="token punctuation">{</span>  <span class="token keyword">static</span> Future<span class="token operator">&lt;</span>BuiltList<span class="token operator">&lt;</span>LavaProgram<span class="token operator">>></span> <span class="token function">fetchRecommendPrograms</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token punctuation">{</span>    Dio dio <span class="token operator">=</span> <span class="token function">Dio</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Response response <span class="token operator">=</span> <span class="token keyword">await</span> dio<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span>      <span class="token string">'http://www.lavaradio.com/api/radio.listGroundPrograms.json?_pn=3&amp;_sz=20'</span><span class="token punctuation">,</span>      options<span class="token punctuation">:</span> <span class="token function">Options</span><span class="token punctuation">(</span>responseType<span class="token punctuation">:</span> ResponseType<span class="token punctuation">.</span>plain<span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">print</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>    LavaResult result <span class="token operator">=</span> LavaResult<span class="token punctuation">.</span><span class="token function">fromJson</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>err <span class="token operator">==</span> <span class="token string">'hapn.ok'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">'Request success'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      LavaData resultData <span class="token operator">=</span> result<span class="token punctuation">.</span>data<span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>resultData <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">print</span><span class="token punctuation">(</span>            <span class="token string">'Request result data size:${resultData.size}, total:${resultData.total}'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        BuiltList<span class="token operator">&lt;</span>LavaProgram<span class="token operator">></span> dataList <span class="token operator">=</span> resultData<span class="token punctuation">.</span>lists<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>dataList <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> dataList<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token keyword">return</span> dataList<span class="token punctuation">;</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>tab_recommend_page.dart</p><pre class=" language-dart"><code class="language-dart">  <span class="token keyword">void</span> <span class="token function">loadData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token punctuation">{</span>    BuiltList<span class="token operator">&lt;</span>LavaProgram<span class="token operator">></span> dataList <span class="token operator">=</span> <span class="token keyword">await</span> Lava<span class="token punctuation">.</span><span class="token function">fetchRecommendPrograms</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>dataList <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> dataList<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      List<span class="token operator">&lt;</span>RecommendModel<span class="token operator">></span> newModels <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span>LavaProgram p <span class="token keyword">in</span> dataList<span class="token punctuation">)</span> <span class="token punctuation">{</span>        RecommendModel model <span class="token operator">=</span> <span class="token function">RecommendModel</span><span class="token punctuation">(</span><span class="token punctuation">(</span>builder<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> builder          <span class="token punctuation">.</span><span class="token punctuation">.</span>id <span class="token operator">=</span> p<span class="token punctuation">.</span>programId          <span class="token punctuation">.</span><span class="token punctuation">.</span>title <span class="token operator">=</span> p<span class="token punctuation">.</span>programName          <span class="token punctuation">.</span><span class="token punctuation">.</span>imgUrl <span class="token operator">=</span> p<span class="token punctuation">.</span>picUrl          <span class="token punctuation">.</span><span class="token punctuation">.</span>userName <span class="token operator">=</span> p<span class="token punctuation">.</span>user<span class="token punctuation">.</span>uname          <span class="token punctuation">.</span><span class="token punctuation">.</span>avatarUrl <span class="token operator">=</span> p<span class="token punctuation">.</span>user<span class="token punctuation">.</span>picUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>        newModels<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>model<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>      dataSourceItems<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        dataSourceItems<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>newModels<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span></code></pre><p>到此，我们就完成网络数据的加载了！git记录一下。</p><pre class=" language-shell"><code class="language-shell">git commit -m '使用built_value处理json数据'</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> flutter </tag>
            
            <tag> evo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flutter学习笔记3 - 基础控件</title>
      <link href="/2020/02/05/007-learning-flutter-3-base-widget/"/>
      <url>/2020/02/05/007-learning-flutter-3-base-widget/</url>
      
        <content type="html"><![CDATA[<h2 id="Widget"><a href="#Widget" class="headerlink" title="Widget"></a>Widget</h2><p>在Flutter里，所有UI控件都叫Widget，包括基本的文本、按钮、图片，还有容器、布局，以及动画等等都通过<code>Widget</code>抽象类实现的。</p><p>Widget下面可分为两种子类，一种是无状态的，继承自<code>StatelessWidget</code>，只负责展示信息，没有交状态变化。<code>StatelessWidget</code>的构造方法只有一个<code>BuildContext</code>参数，context记录了widget树的上下文信息，可以通过context查找到指定特征的widget。</p><pre class=" language-dart"><code class="language-dart"><span class="token keyword">class</span> <span class="token class-name">TestWidget</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>  <span class="token metadata symbol">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">Widget</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>另一种是有状态的，继承自<code>StatefulWidget</code>，它比<code>StatelessWidget</code>多了一个<code>State</code>参数，State记录了widget的各种状态信息，当State发现变化时，会调用setState()方法通知Flutter framework，再次调用build方法重新构建widget树，从而达到更新UI的目的。</p><pre class=" language-dart"><code class="language-dart"><span class="token keyword">class</span> <span class="token class-name">TestWidget</span> <span class="token keyword">extends</span> <span class="token class-name">StatefulWidget</span> <span class="token punctuation">{</span>  <span class="token metadata symbol">@override</span>  State <span class="token function">createState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">_ControlWidgetState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">_ControlWidgetState</span> <span class="token keyword">extends</span> <span class="token class-name">State</span><span class="token operator">&lt;</span>TestWidget<span class="token operator">></span> <span class="token punctuation">{</span>  int _counter <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token metadata symbol">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">Center</span><span class="token punctuation">(</span>        child<span class="token punctuation">:</span> <span class="token function">RaisedButton</span><span class="token punctuation">(</span>          child<span class="token punctuation">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"button "</span> <span class="token operator">+</span> _counter<span class="token punctuation">)</span><span class="token punctuation">,</span>        onPressed<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>          <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 调用setState()后build()方法会被重新调用</span>            _counter<span class="token operator">++</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>      <span class="token punctuation">)</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="文本展示"><a href="#文本展示" class="headerlink" title="文本展示"></a>文本展示</h2><p>Flutter提供的文本展示控件叫<code>Text</code>，可以设置文本字体大小、粗细、颜色等样式。<code>Text</code>控件不能指定自身尺寸，其宽高根据内容自适应。另外，还可以使用<code>TextSpan</code>组合不同样式的文本。</p><p>Text常用参数</p><pre class=" language-dart"><code class="language-dart"><span class="token keyword">const</span> <span class="token function">Text</span><span class="token punctuation">(</span>  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">// 文本内容</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>style<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 文本样式，包括字体大小、颜色、粗细、背景色等</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>textAlign<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 对齐方式</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>overflow<span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// 设置文本截断方式</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>textScaleFactor<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 放大倍数</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>maxLines<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 最大行数，默认是1</span>  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><p>TextStyle常用参数</p><pre class=" language-dart"><code class="language-dart"><span class="token keyword">const</span> <span class="token function">TextStyle</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>color<span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// 字体色</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>backgroundColor<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 背景色</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>fontSize<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 字体大小</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>fontWeight<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 粗细</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>letterSpacing<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 字母间距</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>height<span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// 行高</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>background<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 背景色</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>shadows<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 阴影</span>    String fontFamily<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 字体</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><p>TextSpan常用参数</p><pre class=" language-dart"><code class="language-dart"><span class="token keyword">const</span> <span class="token function">TextSpan</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  TextStyle style<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 通用样式</span>  Sting text<span class="token punctuation">,</span>  List<span class="token operator">&lt;</span>TextSpan<span class="token operator">></span> children<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 嵌套子TestSpan，</span>  GestureRecognizer recognizer<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 响应的手势</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>示例代码</p><pre class=" language-dart"><code class="language-dart"><span class="token function">Text</span><span class="token punctuation">(</span>  <span class="token string">"Hello world！ "</span> <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">,</span>  maxLines<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span>      textAlign<span class="token punctuation">:</span> TextAlign<span class="token punctuation">.</span>left<span class="token punctuation">,</span>  textScaleFactor<span class="token punctuation">:</span> <span class="token number">1.5</span><span class="token punctuation">,</span>     style<span class="token punctuation">:</span> <span class="token function">TextStyle</span><span class="token punctuation">(</span>        color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>        fontSize<span class="token punctuation">:</span> <span class="token number">17.0</span><span class="token punctuation">,</span>        fontWeight<span class="token punctuation">:</span> FontWeight<span class="token punctuation">.</span>bold<span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Text<span class="token punctuation">.</span><span class="token function">rich</span><span class="token punctuation">(</span><span class="token function">TextSpan</span><span class="token punctuation">(</span>  style<span class="token punctuation">:</span> <span class="token function">TextStyle</span><span class="token punctuation">(</span>      fontSize<span class="token punctuation">:</span> <span class="token number">20.0</span><span class="token punctuation">,</span>  <span class="token punctuation">)</span>    children<span class="token punctuation">:</span> <span class="token operator">&lt;</span>Widget<span class="token operator">></span> <span class="token punctuation">[</span>    <span class="token function">TextSpan</span><span class="token punctuation">(</span>    text<span class="token punctuation">:</span> <span class="token string">"Domain:"</span>    <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">TextSpan</span><span class="token punctuation">(</span>        text<span class="token punctuation">:</span> <span class="token string">"https://www.songjiaqiang.cn"</span><span class="token punctuation">,</span>      style<span class="token punctuation">:</span> <span class="token function">TextStyle</span><span class="token punctuation">(</span>          color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>blue      <span class="token punctuation">)</span><span class="token punctuation">,</span>      recognizer<span class="token punctuation">:</span> _tapRecognizer    <span class="token punctuation">)</span>  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="图片展示"><a href="#图片展示" class="headerlink" title="图片展示"></a>图片展示</h2><p>Flutter提供的图片展示控件有两个，一个是<code>Icon</code>，用于展示内置的矢量图标，另一个是<code>Image</code> ，用于加载标量图片。</p><h3 id="Image"><a href="#Image" class="headerlink" title="Image"></a>Image</h3><p>系统内置了四种加载图片的方式，分别是项目资源，磁盘文件、网络、内存。</p><p>Image常用参数</p><pre class=" language-dart"><code class="language-dart"><span class="token keyword">const</span> <span class="token function">Image</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>width<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//图片的宽</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>height<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//图片高度</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>color<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//图片的混合色值</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>colorBlendMode<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//混合模式</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>fit<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//填充模式</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>alignment <span class="token operator">=</span> Alignment<span class="token punctuation">.</span>center<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//对齐方式</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>repeat <span class="token operator">=</span> ImageRepeat<span class="token punctuation">.</span>noRepeat<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//重复方式</span>  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><p>图片填充模式</p><pre class=" language-dart"><code class="language-dart"><span class="token keyword">enum</span> BoxFit <span class="token punctuation">{</span>  none<span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// 按图片真实尺寸显示</span>  fill<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 拉伸图片填充容器</span>  contain<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 完全显示在容器内，如果图片尺寸比容器小，放大图片</span>  scaleDown<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 完全显示在容器内，如果图片尺寸比容器小，不放大</span>  cover<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 图片缩放到正好可以覆盖容器的大小</span>  fitWidth<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 图片水平方向填充容器，垂直方向等比缩放</span>  fitHeight<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 图片垂直方向填充容器，水平方向等比缩放</span><span class="token punctuation">}</span></code></pre><p>加载图片方式</p><pre class=" language-dart"><code class="language-dart">Image<span class="token punctuation">.</span><span class="token function">asset</span><span class="token punctuation">(</span><span class="token string">"asset/path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Image<span class="token punctuation">.</span><span class="token function">file</span><span class="token punctuation">(</span><span class="token string">"/file/path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Image<span class="token punctuation">.</span><span class="token function">network</span><span class="token punctuation">(</span><span class="token string">"http://domain.com/image/url"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Image<span class="token punctuation">.</span><span class="token function">memory</span><span class="token punctuation">(</span>bytes<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//  AssetBundle().load("/file/path"); byteData.buffer.asUint8List();</span></code></pre><p>代码示例</p><pre class=" language-dart"><code class="language-dart">Image<span class="token punctuation">.</span><span class="token function">network</span><span class="token punctuation">(</span> <span class="token comment" spellcheck="true">// 默认最大缓存数量是1000，最大缓存空间为100M，不做数据持久化</span>  <span class="token string">"https://res.klook.com/image/upload/v1464854586/web3.0/mobile.jpg"</span><span class="token punctuation">,</span>  width<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">,</span>  height<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>  fit<span class="token punctuation">:</span> BoxFit<span class="token punctuation">.</span>fill<span class="token punctuation">,</span>  color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span>  colorBlendMode<span class="token punctuation">:</span> BlendMode<span class="token punctuation">.</span>difference<span class="token punctuation">,</span><span class="token punctuation">)</span></code></pre><h3 id="Icon"><a href="#Icon" class="headerlink" title="Icon"></a>Icon</h3><p>Icon是一种字体图标，可以像字体一样设置文本样式，也可以通过TextSpan和文本混用，相对于Image具有体积小，矢量性的好处。</p><p>系统提供了一套Material风格的字体图标，可在pubspec.yaml文件配置启用。</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">flutter</span><span class="token punctuation">:</span>  <span class="token key atrule">uses-material-design</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></code></pre><p>自定义图标字体</p><p>Step1：导入图片字体文件到工程目录，比如”fonts/iconfont.ttf”</p><p>Setp2：在<code>pubspec.yaml</code>文件配置自定义字体</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">fonts</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">family</span><span class="token punctuation">:</span> myIcon  <span class="token comment" spellcheck="true">#指定一个字体名</span>    <span class="token key atrule">fonts</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">asset</span><span class="token punctuation">:</span> fonts/iconfont.ttf</code></pre><p>Step3：创建图标引用工具类</p><pre class=" language-dart"><code class="language-dart"><span class="token keyword">class</span> <span class="token class-name">MyIcons</span><span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// book 图标</span>  <span class="token keyword">static</span> <span class="token keyword">const</span> IconData book <span class="token operator">=</span> <span class="token keyword">const</span> <span class="token function">IconData</span><span class="token punctuation">(</span>      <span class="token number">0xe614</span><span class="token punctuation">,</span>       fontFamily<span class="token punctuation">:</span> <span class="token string">'myIcon'</span><span class="token punctuation">,</span>       matchTextDirection<span class="token punctuation">:</span> <span class="token boolean">true</span>  <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 微信图标</span>  <span class="token keyword">static</span> <span class="token keyword">const</span> IconData wechat <span class="token operator">=</span> <span class="token keyword">const</span> <span class="token function">IconData</span><span class="token punctuation">(</span>      <span class="token number">0xec7d</span><span class="token punctuation">,</span>        fontFamily<span class="token punctuation">:</span> <span class="token string">'myIcon'</span><span class="token punctuation">,</span>       matchTextDirection<span class="token punctuation">:</span> <span class="token boolean">true</span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>Step4：使用字体图标</p><pre class=" language-dart"><code class="language-dart"><span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>accessible<span class="token punctuation">,</span> color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>green<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">Icon</span><span class="token punctuation">(</span>MyIcons<span class="token punctuation">.</span>book<span class="token punctuation">,</span> color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>blue<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span></code></pre><h2 id="按钮"><a href="#按钮" class="headerlink" title="按钮"></a>按钮</h2><p>Flutter提供了多个基本的Material按钮控件，比如<code>FlatButton</code>、<code>RaiseButton</code>、<code>IconButton</code>。可以设置按钮的基本样式和按压事件<code>onPressed</code>，自带<code>icon</code>构造函数可以直接设置带图标的按钮，自定义按钮内部布局可以使用child参数配置。</p><p>常用参数</p><pre class=" language-dart"><code class="language-dart"><span class="token keyword">const</span> <span class="token function">RaisedButton</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    <span class="token metadata symbol">@required</span> VoidCallback onPressed<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 点击事件</span>    VoidCallback onLongPress<span class="token punctuation">,</span>     <span class="token comment" spellcheck="true">// 长按事件</span>    Color textColor<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//文本颜色</span>    Color disabledTextColor<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// enabled=false时的文本颜色</span>    Color color<span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// 按钮颜色</span>    Color disabledColor<span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// enabled=false时的按钮颜色 </span>    Color highlightColor<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 高亮状态的按钮颜色</span>    EdgeInsetsGeometry padding<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//内边距</span>    Widget child<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//子控件</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span> </code></pre><p>代码示例</p><pre class=" language-dart"><code class="language-dart"><span class="token function">RaisedButton</span><span class="token punctuation">(</span>    child<span class="token punctuation">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"Button"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    onLongPress<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"Loog Pressed Button"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span>FlatButton<span class="token punctuation">.</span><span class="token function">icon</span><span class="token punctuation">(</span>  icon<span class="token punctuation">:</span> <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>info<span class="token punctuation">)</span><span class="token punctuation">,</span>  label<span class="token punctuation">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">"Info"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    onPressed<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"Pressed Button"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span></code></pre><h2 id="输入框"><a href="#输入框" class="headerlink" title="输入框"></a>输入框</h2><p>Flutter提供的文本输入框叫<code>TextField</code>，通过<code>InputDecoration</code>设置文本的信息，通过<code>TextEditingController</code>监听文本框事件。</p><p>TextField的基础参数</p><pre class=" language-dart"><code class="language-dart"><span class="token keyword">const</span> <span class="token function">TextField</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>  TextEditingController controller<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 编辑框控制器</span>  FocusNode focusNode<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 键盘焦点</span>  InputDecoration decoration <span class="token operator">=</span> <span class="token keyword">const</span> <span class="token function">InputDecoration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 编辑框样式，设置占位符</span>  TextInputType keyboardType<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 键盘类型</span>  TextStyle style<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 文本样式</span>  TextAlign textAlign <span class="token operator">=</span> TextAlign<span class="token punctuation">.</span>start<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 对齐方式</span>  bool autofocus <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 是否获得焦点</span>  bool obscureText <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 是否隐藏正在编辑的文本，用于密码输入</span>  int maxLines <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 最大显示行数</span>  int maxLength<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 最大输入长度</span>  bool maxLengthEnforced <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  ValueChanged<span class="token operator">&lt;</span>String<span class="token operator">></span> onChanged<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 文本内容变化回调</span>  VoidCallback onEditingComplete<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 编辑结束回调</span>  List<span class="token operator">&lt;</span>TextInputFormatter<span class="token operator">></span> inputFormatters<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 校验输入内容格式</span>  bool enabled<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 是否可编辑</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>cursorWidth <span class="token operator">=</span> <span class="token number">2.0</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 光标宽度</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>cursorRadius<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 光标圆角</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>cursorColor<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 光标颜色</span>  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><p>代码示例</p><pre class=" language-dart"><code class="language-dart"><span class="token keyword">class</span> <span class="token class-name">MessageForm</span> <span class="token keyword">extends</span> <span class="token class-name">StatefulWidget</span> <span class="token punctuation">{</span>  <span class="token metadata symbol">@override</span>  State <span class="token function">createState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">_MessageFormState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">_MessageFormState</span> <span class="token keyword">extends</span> <span class="token class-name">State</span><span class="token operator">&lt;</span>MessageForm<span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">var</span> _editController <span class="token operator">=</span> <span class="token function">TextEditingController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token metadata symbol">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">Column</span><span class="token punctuation">(</span>      mainAxisAignment<span class="token punctuation">:</span> MainAxisAlignment<span class="token punctuation">.</span>center<span class="token punctuation">,</span>      children<span class="token punctuation">:</span> <span class="token operator">&lt;</span>Widget<span class="token operator">></span><span class="token punctuation">[</span>        <span class="token function">TextField</span><span class="token punctuation">(</span>          controller<span class="token punctuation">:</span> _editController<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 需要控制器负责监听输入内容</span>          decoration<span class="token punctuation">:</span> <span class="token function">InputDecoration</span><span class="token punctuation">(</span>              hintText<span class="token punctuation">:</span> <span class="token string">'Type something'</span><span class="token punctuation">,</span>          <span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token function">RaisedButton</span><span class="token punctuation">(</span>            onPressed<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">'_controller.text'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>          child<span class="token punctuation">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">'Done'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token metadata symbol">@override</span>   <span class="token keyword">void</span> <span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    _editController<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="弹窗"><a href="#弹窗" class="headerlink" title="弹窗"></a>弹窗</h2><p>Flutter提供的弹窗控件叫<code>AlertDialog</code>，可以设置标题、内容、按钮等属性，使用导航pop()方法退出。</p><p>常用参数</p><pre class=" language-dart"><code class="language-dart"><span class="token keyword">const</span> <span class="token function">AlertDialog</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  Key key<span class="token punctuation">,</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>title<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//对话框标题组件</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>titlePadding<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 标题填充</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>titleTextStyle<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//标题文本样式</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>content<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 对话框内容组件</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>contentPadding <span class="token operator">=</span> <span class="token keyword">const</span> EdgeInsets<span class="token punctuation">.</span><span class="token function">fromLTRB</span><span class="token punctuation">(</span><span class="token number">24.0</span><span class="token punctuation">,</span> <span class="token number">20.0</span><span class="token punctuation">,</span> <span class="token number">24.0</span><span class="token punctuation">,</span> <span class="token number">24.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//内容的填充</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>contentTextStyle<span class="token punctuation">,</span><span class="token comment" spellcheck="true">// 内容文本样式</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>actions<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 对话框操作按钮组</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>backgroundColor<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 对话框背景色</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>elevation<span class="token punctuation">,</span><span class="token comment" spellcheck="true">// 对话框的阴影</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>semanticLabel<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//对话框语义化标签(用于读屏软件)</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>shape<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 对话框外形</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><p>示例代码</p><pre class=" language-dart"><code class="language-dart"><span class="token keyword">class</span> <span class="token class-name">TestWidget</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>  <span class="token metadata symbol">@override</span>  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">Column</span><span class="token punctuation">(</span>      mainAxisAignment<span class="token punctuation">:</span> MainAxisAlignment<span class="token punctuation">.</span>center<span class="token punctuation">,</span>      children<span class="token punctuation">:</span> <span class="token operator">&lt;</span>Widget<span class="token operator">></span><span class="token punctuation">[</span>        <span class="token function">RaisedButton</span><span class="token punctuation">(</span>          child<span class="token punctuation">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">'Done'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            onPressed<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">showDialog</span><span class="token punctuation">(</span>                context<span class="token punctuation">:</span> context<span class="token punctuation">,</span>                builder<span class="token punctuation">:</span> <span class="token punctuation">(</span>_<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// </span>                  <span class="token keyword">return</span> <span class="token function">AlertDialog</span><span class="token punctuation">(</span>    <span class="token comment" spellcheck="true">// </span>                    title<span class="token punctuation">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">'Title'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                      content<span class="token punctuation">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">'This is a Dialog'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                      actions<span class="token punctuation">:</span> <span class="token operator">&lt;</span>Widget<span class="token operator">></span> <span class="token punctuation">[</span>                        <span class="token function">FlatButton</span><span class="token punctuation">(</span>                            child<span class="token punctuation">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">'Cancel'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                            onPressed<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> Navigator<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                        <span class="token punctuation">)</span><span class="token punctuation">,</span>                           <span class="token function">FlatButton</span><span class="token punctuation">(</span>                            child<span class="token punctuation">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">'OK'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                            onPressed<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> Navigator<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                        <span class="token punctuation">)</span><span class="token punctuation">,</span>                      <span class="token punctuation">]</span><span class="token punctuation">,</span>                    <span class="token punctuation">)</span><span class="token punctuation">,</span>              <span class="token punctuation">}</span>            <span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="更多控件"><a href="#更多控件" class="headerlink" title="更多控件"></a>更多控件</h2><p>Flutter还提供了很多基础控件，比如单选框<code>Switch</code>、复选框<code>Checkbox</code>、进度指示器<code>LinearProgressIndicator</code>等等，就不一一列举了。</p><p>不过Flutter很多控件平时是用不到的，因此也被认为是过度设计了。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>Flutter中文网：<a href="https://book.flutterchina.club/chapter3/" target="_blank" rel="noopener">https://book.flutterchina.club/chapter3/</a></p><p>Flutter学习指南 - UI布局和控件：<a href="https://juejin.im/post/5bd54b7be51d456c430e35f6" target="_blank" rel="noopener">https://juejin.im/post/5bd54b7be51d456c430e35f6</a></p><p>获取图片bytes：<a href="https://github.com/flutter/flutter/issues/17038" target="_blank" rel="noopener">https://github.com/flutter/flutter/issues/17038</a></p><p>颜色混合模式：<a href="https://wenku.baidu.com/view/11635cf3ba0d4a7302763a95.html?re=view" target="_blank" rel="noopener">https://wenku.baidu.com/view/11635cf3ba0d4a7302763a95.html?re=view</a></p><p>Material Design Icons：<a href="https://material.io/resources/icons/?style=baseline" target="_blank" rel="noopener">https://material.io/resources/icons/?style=baseline</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> flutter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flutter学习笔记2 - 第一个App</title>
      <link href="/2020/02/04/006-learning-flutter-2-first-app/"/>
      <url>/2020/02/04/006-learning-flutter-2-first-app/</url>
      
        <content type="html"><![CDATA[<p>Flutter环境安装好之后，迫不及待的想要尝试一下了吧，下面介绍三种创建Flutter项目的方式。</p><h2 id="方式一：命令行"><a href="#方式一：命令行" class="headerlink" title="方式一：命令行"></a>方式一：命令行</h2><ol><li><p>创建项目</p><pre class=" language-shell"><code class="language-shell">flutter create hello_world</code></pre></li><li><p>启动一个模拟器，以iOS为例</p><pre class=" language-shell"><code class="language-shell">open -a Simulator</code></pre></li><li><p>运行项目</p><pre class=" language-shell"><code class="language-shell">cd hello_worldfullter run</code></pre></li></ol><h2 id="方式二：Android-Studio"><a href="#方式二：Android-Studio" class="headerlink" title="方式二：Android Studio"></a>方式二：Android Studio</h2><ol><li><p>下载<a href="https://developer.android.com/studio" target="_blank" rel="noopener">Android Studio</a></p></li><li><p>安装Flutter和Dart插件</p><p><a href="https://tva1.sinaimg.cn/large/006tNbRwgy1gbkogon09nj319w0gc0vj.jpg" data-fancybox="group" data-caption="flutter_plugin" class="fancybox"><img alt="flutter_plugin" title="flutter_plugin" data-src="https://tva1.sinaimg.cn/large/006tNbRwgy1gbkogon09nj319w0gc0vj.jpg" class="lazyload"></a></p></li><li><p>Start a new Flutter project</p><p><a href="https://tva1.sinaimg.cn/large/006tNbRwgy1gbkojy4ckxj315k0rkgom.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://tva1.sinaimg.cn/large/006tNbRwgy1gbkojy4ckxj315k0rkgom.jpg" class="lazyload"></a></p></li><li><p>启动一个模拟器</p><p><a href="https://tva1.sinaimg.cn/large/006tNbRwgy1gbkon2sbwlj30z40eswi7.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://tva1.sinaimg.cn/large/006tNbRwgy1gbkon2sbwlj30z40eswi7.jpg" class="lazyload"></a></p></li><li><p>点击运行按钮启动程序</p></li></ol><h2 id="方式三：VS-Code"><a href="#方式三：VS-Code" class="headerlink" title="方式三：VS Code"></a>方式三：VS Code</h2><ol><li><p>下载<a href="https://code.visualstudio.com/" target="_blank" rel="noopener">VS Code</a> </p></li><li><p>安装Flutter和Dart插件</p><p><a href="https://tva1.sinaimg.cn/large/006tNbRwgy1gbko8h8yz4j31800d2ah1.jpg" data-fancybox="group" data-caption="775FF52F-E217-4A4E-9392-38D15F9EABB0" class="fancybox"><img alt="775FF52F-E217-4A4E-9392-38D15F9EABB0" title="775FF52F-E217-4A4E-9392-38D15F9EABB0" data-src="https://tva1.sinaimg.cn/large/006tNbRwgy1gbko8h8yz4j31800d2ah1.jpg" class="lazyload"></a></p></li><li><p>快捷键Command+Shift+P，选择Flutter: New Project</p><p><a href="https://tva1.sinaimg.cn/large/006tNbRwgy1gbko1j5zufj30xe08adim.jpg" data-fancybox="group" data-caption="52D6432D-04FA-4739-AA3C-0EEF30D59F36" class="fancybox"><img alt="52D6432D-04FA-4739-AA3C-0EEF30D59F36" title="52D6432D-04FA-4739-AA3C-0EEF30D59F36" data-src="https://tva1.sinaimg.cn/large/006tNbRwgy1gbko1j5zufj30xe08adim.jpg" class="lazyload"></a></p></li><li><p>启动一个模拟器</p></li><li><p>点击运行按钮启动程序</p><p><a href="https://tva1.sinaimg.cn/large/006tNbRwgy1gbkodaj14wj311g0iqqen.jpg" data-fancybox="group" data-caption="1CC2DC74-2998-48B0-B56D-8701F2BEB343" class="fancybox"><img alt="1CC2DC74-2998-48B0-B56D-8701F2BEB343" title="1CC2DC74-2998-48B0-B56D-8701F2BEB343" data-src="https://tva1.sinaimg.cn/large/006tNbRwgy1gbkodaj14wj311g0iqqen.jpg" class="lazyload"></a></p></li></ol><p>运行效果👇</p><p><a href="https://tva1.sinaimg.cn/large/006tNbRwgy1gbkoil88zbj30u01sx0w3.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://tva1.sinaimg.cn/large/006tNbRwgy1gbkoil88zbj30u01sx0w3.jpg" class="lazyload"></a></p>]]></content>
      
      
      
        <tags>
            
            <tag> flutter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flutter学习笔记1 - 安装Flutter</title>
      <link href="/2020/02/03/005-learning-flutter-1-install/"/>
      <url>/2020/02/03/005-learning-flutter-1-install/</url>
      
        <content type="html"><![CDATA[<h2 id="获取Flutter源代码"><a href="#获取Flutter源代码" class="headerlink" title="获取Flutter源代码"></a>获取Flutter源代码</h2><p>安装Flutter其实就是下载flutter的源代码到本地，有git和zip两种方式。</p><h3 id="下载zip包"><a href="#下载zip包" class="headerlink" title="下载zip包"></a>下载zip包</h3><p>从<a href="https://flutter.dev/docs/development/tools/sdk/releases" target="_blank" rel="noopener">Realese目录</a>中下载最新版本的zip包，并解压到自己指定的安装目录。</p><h3 id="克隆源代码（推荐）"><a href="#克隆源代码（推荐）" class="headerlink" title="克隆源代码（推荐）"></a>克隆源代码（推荐）</h3><p>从github中克隆flutter的源代码到自己指定的安装目录。</p><pre class=" language-shell"><code class="language-shell">git clone https://github.com/flutter/flutter.git</code></pre><h2 id="配置Flutter命令行工具"><a href="#配置Flutter命令行工具" class="headerlink" title="配置Flutter命令行工具"></a>配置Flutter命令行工具</h2><p>使用export命令配置flutter工具，这个命令只在当前系统周期有效，重启电脑需要重新配置。</p><pre class=" language-shell"><code class="language-shell">export PATH="$PATH:`pwd`/flutter/bin"</code></pre><p>如果不想每次重启电脑都配置一遍，可以在系统环境配置文件追加上述命令，一般情况下配置文件是<code>.bash_profile</code>，如果安装了zsh，配置到文件<code>.zshrc</code>，修改配置文件后再Terminal执行<code>source filePath</code>更新环境变量。</p><p>另外，flutter使用期间需要访问网络获取一些资源，在国内访问加速可以更换掉flutter的存储地址，如下，</p><pre class=" language-shell"><code class="language-shell">export PUB_HOSTED_URL=https://pub.flutter-io.cn export FLUTTER_STORAGE_BASE_URL=https://storage.flutter-io.cn</code></pre><h2 id="环境测试"><a href="#环境测试" class="headerlink" title="环境测试"></a>环境测试</h2><p>配置完成后使用<code>doctor</code>指令测试flutter环境是否配置成功。</p><pre class=" language-shell"><code class="language-shell">flutter doctor</code></pre><p>如果还没有安装过Android SDK，会提示你先安装<a href="https://goo.gl/XxQghQ" target="_blank" rel="noopener">Android SDK</a>，这里建议直接安装<a href="https://developer.android.com/studio" target="_blank" rel="noopener">Android Studio</a>，然后通过Android Studio安装SDK。</p><p>同样的，还需要安装一下Xcode的命令行工具。</p><pre class=" language-shell"><code class="language-shell"> sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer sudo xcodebuild -runFirstLaunch</code></pre><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://flutter.dev/docs/get-started/install/macos" target="_blank" rel="noopener">https://flutter.dev/docs/get-started/install/macos</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> flutter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何为Hexo配置Gitalk评论系统</title>
      <link href="/2020/02/02/004-how-to-use-gitalk/"/>
      <url>/2020/02/02/004-how-to-use-gitalk/</url>
      
        <content type="html"><![CDATA[<p>搭建博客少不了评论系统，选择有很多，初略对比了一下<code>Gitment</code>、<code>Gitalk</code>、<code>Valine</code>，最终选择了Gitalk。<br>官方地址：<a href="https://github.com/gitalk/gitalk" target="_blank" rel="noopener">https://github.com/gitalk/gitalk</a></p><h2 id="搭建过程"><a href="#搭建过程" class="headerlink" title="搭建过程"></a>搭建过程</h2><h3 id="step1"><a href="#step1" class="headerlink" title="step1:"></a>step1:</h3><p>注册Github Application，申请OAuth登录授权，地址是<a href="https://github.com/settings/applications/new，" target="_blank" rel="noopener">https://github.com/settings/applications/new，</a><br>注册成功之后获得<code>Client ID</code>和<code>Client Secret</code>。</p><ul><li>Application name：网站名称</li><li>HomePage URL：仓库地址，建议使用当前网站的仓库地址，也可以使用其它仓库地址</li><li>Authorization callback URL：网站主页地址<br><a href="https://tva1.sinaimg.cn/large/006tNbRwgy1gbibrleri9j30s00u0dje.jpg" data-fancybox="group" data-caption="Register_Github_Application_Token" class="fancybox"><img alt="Register_Github_Application_Token" title="Register_Github_Application_Token" data-src="https://tva1.sinaimg.cn/large/006tNbRwgy1gbibrleri9j30s00u0dje.jpg" class="lazyload"></a></li></ul><h3 id="step2"><a href="#step2" class="headerlink" title="step2:"></a>step2:</h3><p>打开当前主题下的<code>_config.yml</code>文件，这里使用的是<code>themes/butterfly</code>。<br>找到或添加以下模板，并填入相应内容，然后重新部署网站。</p><pre class=" language-yml"><code class="language-yml">gitalk:  enable: true # 开启gitalk  client_id: xxx # setp1注册获得的Client ID  client_secret: xxx  # setp1注册获得的Client Secret  repo: songjiaqiang.github.io # 网站仓库名称，和setp1中的HomePage URL对应。注意只要填名称，不是网址  owner: SongJiaqiang # 仓库创建者  admin: SongJiaqiang # 仓库管理员，多管理员使用数组，如['SongJiaqiang', 'Jarvis']  language: en # 评论框语言，如en , zh-CN , zh-TW  count: true # 是否显示评论总数</code></pre><h3 id="setp3："><a href="#setp3：" class="headerlink" title="setp3："></a>setp3：</h3><p>打开博客网站，再打开任一文章，拉到底部就能看到Gitalk的评论框了。<br>点击登录按钮登录评论者的git账号，即可对文章进行评论。<br><a href="https://tva1.sinaimg.cn/large/006tNbRwgy1gbic8hs92dj31f40le40c.jpg" data-fancybox="group" data-caption="create_comment" class="fancybox"><img alt="create_comment" title="create_comment" data-src="https://tva1.sinaimg.cn/large/006tNbRwgy1gbic8hs92dj31f40le40c.jpg" class="lazyload"></a><br>评论结果会出现在setp1填写的仓库地址的issues中。<br><a href="https://tva1.sinaimg.cn/large/006tNbRwgy1gbic92xdqgj31km0cg0v5.jpg" data-fancybox="group" data-caption="comment_in_issues" class="fancybox"><img alt="comment_in_issues" title="comment_in_issues" data-src="https://tva1.sinaimg.cn/large/006tNbRwgy1gbic92xdqgj31km0cg0v5.jpg" class="lazyload"></a><br>同时站长也可以在Issues中直接回复评论，评论会出现在网站中。<br><a href="https://tva1.sinaimg.cn/large/006tNbRwgy1gbicelsjafj31680aamy8.jpg" data-fancybox="group" data-caption="reply_comment_in_issues" class="fancybox"><img alt="reply_comment_in_issues" title="reply_comment_in_issues" data-src="https://tva1.sinaimg.cn/large/006tNbRwgy1gbicelsjafj31680aamy8.jpg" class="lazyload"></a><br><a href="https://tva1.sinaimg.cn/large/006tNbRwgy1gbicf7eldqj31g409sgmb.jpg" data-fancybox="group" data-caption="reply_comment_in_website" class="fancybox"><img alt="reply_comment_in_website" title="reply_comment_in_website" data-src="https://tva1.sinaimg.cn/large/006tNbRwgy1gbicf7eldqj31g409sgmb.jpg" class="lazyload"></a></p><h2 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h2><p>Q：点击评论组件中的github登录按钮，重定向失败，地址栏变成<br><code># https://songjiaqiang.com/?error=redirect_uri_mismatch&amp;error_description=The+redirect_uri+MUST+match+the+registered+callback+URL+for+this+application.&amp;error_uri=https%3A%2F%2Fdeveloper.github.com%2Fapps%2Fmanaging-oauth-apps%2Ftroubleshooting-authorization-request-errors%2F%23redirect-uri-mismatch</code><br>A：<code>_config.yml</code>文件中配置的repo填错了，不是填仓库地址，应该填仓库名称。</p><p>Q：评论组件无法显示历史评论内容，出现错误提示<code>Error: Not Found.</code><br>A：注册Github Application时HomePage URL填错了，不是网站主页地址，应该是仓库地址。</p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> gitalk </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阿米洛机械键盘入手</title>
      <link href="/2020/02/02/003-new-keyboard-varmilo/"/>
      <url>/2020/02/02/003-new-keyboard-varmilo/</url>
      
        <content type="html"><![CDATA[<p>刚买的机械键盘到了，阿米洛87键茶轴，带白色背光，键面使用Mac键盘标记，比如有option键，command键，以及F系列的功能键。<br>购买这款键盘主要也是因为官方宣称它是Mac专用，但是用上之后感觉自己被骗了，使用30分钟，下面吐槽一下这款键盘的问题。<br>槽点太多，先说优点吧。</p><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><ul><li>颜值不错，白色的很优雅，也有其它骚主题</li><li>配备了一个Type-C&amp;USB转接头，适合新版Macbook用户</li><li>键面标记符合Mac用户习惯</li><li>Mac模式下不需要改键</li></ul><h3 id="吐槽"><a href="#吐槽" class="headerlink" title="吐槽"></a>吐槽</h3><ul><li>深圳设计生产的，竟然从北京发货，多等了1天</li><li>键盘键面试Mac模式，但是功能却默认是Windows模式</li><li>背光灯默认是呼吸模式，影响注意力</li><li>Fn按键用不了，无法切换键盘模式和灯光模式</li><li>F键和J键的凸起太浅，不明显</li><li>键盘数据线接口是老旧的USB-mini，和当下流行的数据线不通用</li><li>CapsLock大小写键无效</li><li>说明书上只有windows的操作说明</li><li>找客服，让我各种操作，还原、切换、Fn、Win，没一个生效的</li><li>明明宣传的是Mac键盘，客服还让我找个Windows电脑来配置，气死了</li><li>最后加了一个技术员工的QQ，才搞清楚操作</li><li>用了几天发现按键拿起之后有金属片的嗡嗡声，好难受啊😡</li></ul><h3 id="操作事项"><a href="#操作事项" class="headerlink" title="操作事项"></a>操作事项</h3><ul><li>恢复出厂设置：左opt(win) + esc 长按，默认是windows模式</li><li>使用fn+W长按切换到windows模式，处于当前模式下无反应</li><li>使用fn+A长按切换到mac模式，处于当前模式下无反应</li><li>windows模式：fn+上/下调节背光亮度，capslock按住才能使用大写</li><li>mac模式：f5/f6调节背光亮度，原键盘和机械键盘独立，capslock可单击切换大小写</li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>这个键盘外观还可以，但是手感不是很好，奇葩的双系统设计适合给Mac电脑上安装了windows系统的用户使用。<br>购买这个键盘并不在计划之中，无奈2020年春节被新型冠状病毒拖得太长，需要在老家办公，公司电脑没带，自己的电脑空格键又废了，临时挑选了这个键盘，退货再买又麻烦，还是将就先用着吧，留在老家做备用。</p><p><a href="https://i.loli.net/2020/02/02/C1Y2zsJoRU3mZat.jpg" data-fancybox="group" data-caption="IMG_6531.JPG" class="fancybox"><img alt="IMG_6531.JPG" title="IMG_6531.JPG" data-src="https://i.loli.net/2020/02/02/C1Y2zsJoRU3mZat.jpg" class="lazyload"></a><br><a href="https://i.loli.net/2020/02/02/qFg3veBICy9JEWm.jpg" data-fancybox="group" data-caption="IMG_1471.JPG" class="fancybox"><img alt="IMG_1471.JPG" title="IMG_1471.JPG" data-src="https://i.loli.net/2020/02/02/qFg3veBICy9JEWm.jpg" class="lazyload"></a><br><a href="https://i.loli.net/2020/02/02/wviIpAaVdbNSeR7.jpg" data-fancybox="group" data-caption="IMG_7863.JPG" class="fancybox"><img alt="IMG_7863.JPG" title="IMG_7863.JPG" data-src="https://i.loli.net/2020/02/02/wviIpAaVdbNSeR7.jpg" class="lazyload"></a><br><a href="https://tva1.sinaimg.cn/large/006tNbRwgy1gbi2e6av05j31ke0raai5.jpg" data-fancybox="group" data-caption="IMG_7864.JPG" class="fancybox"><img alt="IMG_7864.JPG" title="IMG_7864.JPG" data-src="https://tva1.sinaimg.cn/large/006tNbRwgy1gbi2e6av05j31ke0raai5.jpg" class="lazyload"></a></p><p>商品链接：<a href="https://item.jd.com/28238355446.html#none" target="_blank" rel="noopener">https://item.jd.com/28238355446.html#none</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> keyboard </tag>
            
            <tag> shopping </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>How to use Hexo and deploy to GitHub Pages</title>
      <link href="/2020/02/01/002-first-post/"/>
      <url>/2020/02/01/002-first-post/</url>
      
        <content type="html"><![CDATA[<h2 id="How-to-use-Hexo-and-deploy-to-GitHub-Pages"><a href="#How-to-use-Hexo-and-deploy-to-GitHub-Pages" class="headerlink" title="How to use Hexo and deploy to GitHub Pages"></a>How to use Hexo and deploy to GitHub Pages</h2><ul><li><a href="https://github.com/hexojs/hexo" target="_blank" rel="noopener">https://github.com/hexojs/hexo</a></li><li><a href="https://hexo.io/docs/" target="_blank" rel="noopener">https://hexo.io/docs/</a></li><li><a href="https://gist.github.com/btfak/18938572f5df000ebe06fbd1872e4e39" target="_blank" rel="noopener">https://gist.github.com/btfak/18938572f5df000ebe06fbd1872e4e39</a></li></ul><h3 id="1-Install-Hexo"><a href="#1-Install-Hexo" class="headerlink" title="1. Install Hexo"></a>1. Install Hexo</h3><pre><code>$ sudo npm install -g hexo-cli$ hexo -vhexo-cli: 0.1.9os: Darwin 14.3.0 darwin x64http_parser: 2.3node: 0.12.7v8: 3.28.71.19uv: 1.6.1zlib: 1.2.8modules: 14openssl: 1.0.1p</code></pre><h3 id="2-Create-a-project-for-your-GitHub-Pages"><a href="#2-Create-a-project-for-your-GitHub-Pages" class="headerlink" title="2. Create a project for your GitHub Pages"></a>2. Create a project for your GitHub Pages</h3><pre><code>$ hexo init yt8yt.github.ioINFO  Copying data to ~/***/yt8yt.github.ioINFO  You are almost done! Don&#39;t forget to run &#39;npm install&#39; before you start blogging with Hexo!$ cd yt8yt.github.io$ npm install</code></pre><h3 id="3-Run-a-test-server-for-your-page-on-Mac"><a href="#3-Run-a-test-server-for-your-page-on-Mac" class="headerlink" title="3. Run a test server for your page on Mac"></a>3. Run a test server for your page on Mac</h3><pre><code>$ hexo serverINFO  Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop.</code></pre><h3 id="4-Set-information-for-your-new-blog"><a href="#4-Set-information-for-your-new-blog" class="headerlink" title="4. Set information for your new blog"></a>4. Set information for your new blog</h3><p><a href="https://hexo.io/docs/configuration.html" target="_blank" rel="noopener">https://hexo.io/docs/configuration.html</a></p><pre><code>$ vi _config.yml~~~~~~~~~~~~~~~~~~ _config.yml ~~~~~~~~~~~~~~~~~~# Sitetitle: yt8yt&#39;s notesubtitle:description: yt8yt&#39;s personal blogauthor: yt8ytlanguage:timezone: Japan# URL## If your site is put in a subdirectory, set url as &#39;http://yoursite.com/child&#39; and root as &#39;/child/&#39;url: http://yt8yt.github.io/root: /permalink: :year/:month/:day/:title/permalink_defaults:</code></pre><h3 id="5-Set-information-to-use-Git"><a href="#5-Set-information-to-use-Git" class="headerlink" title="5. Set information to use Git"></a>5. Set information to use Git</h3><p><a href="https://github.com/hexojs/hexo-deployer-git" target="_blank" rel="noopener">https://github.com/hexojs/hexo-deployer-git</a></p><pre><code>$ npm install hexo-deployer-git --save$ vi _config.yml~~~~~~~~~~~~~~~~~~ _config.yml ~~~~~~~~~~~~~~~~~~# Deployment## Docs: http://hexo.io/docs/deployment.htmldeploy:  type: git  repo: git@github.com:yt8yt/yt8yt.github.io.git  branch: master</code></pre><h3 id="6-Set-“watch”-before-starting-your-work"><a href="#6-Set-“watch”-before-starting-your-work" class="headerlink" title="6. Set “watch” before starting your work"></a>6. Set “watch” before starting your work</h3><p>“watch” command can monitor your files.<br><a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">https://hexo.io/docs/generating.html</a></p><pre><code>$ hexo generate --watch</code></pre><h3 id="7-Create-a-new-post-file"><a href="#7-Create-a-new-post-file" class="headerlink" title="7. Create a new post file"></a>7. Create a new post file</h3><pre><code>$ hexo new first-postINFO  Created: ~/***/yt8yt.github.io/source/_posts/first-post.md</code></pre><h3 id="8-Edit-the-above-file-with-Markdown-or-Hexo’s-Helper"><a href="#8-Edit-the-above-file-with-Markdown-or-Hexo’s-Helper" class="headerlink" title="8. Edit the above file with Markdown or Hexo’s Helper"></a>8. Edit the above file with Markdown or Hexo’s Helper</h3><p>Hexo’s Helper<br><a href="https://hexo.io/docs/helpers.html" target="_blank" rel="noopener">https://hexo.io/docs/helpers.html</a><br>I use Atom with “shift + control + m” when I use Markdown :-)<br><a href="https://atom.io/" target="_blank" rel="noopener">https://atom.io/</a></p><h3 id="9-Delete-“source-posts-hello-world-md”"><a href="#9-Delete-“source-posts-hello-world-md”" class="headerlink" title="9. Delete “source/_posts/hello-world.md”"></a>9. Delete “source/_posts/hello-world.md”</h3><p>It’s not necessary to deploy.</p><h3 id="10-Deploy-your-new-blog"><a href="#10-Deploy-your-new-blog" class="headerlink" title="10. Deploy your new blog!!"></a>10. Deploy your new blog!!</h3><p><a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">https://hexo.io/docs/deployment.html</a></p><pre><code>$ hexo clean$ hexo deploy</code></pre><p>After writting the above command, you can see your new blog on GitHub Pages.<br>http://<strong>**</strong>.github.io/</p><h3 id="11-Change-your-blog-theme"><a href="#11-Change-your-blog-theme" class="headerlink" title="11. Change your blog theme"></a>11. Change your blog theme</h3><p><a href="https://github.com/hexojs/hexo/wiki/Themes" target="_blank" rel="noopener">https://github.com/hexojs/hexo/wiki/Themes</a></p><pre><code>For instance, How to use the following theme.https://hexo.io/hexo-theme-light/## Install it$ cd yt8yt.github.io$ git clone git://github.com/tommy351/hexo-theme-light.git themes/light## Update the above files$ themes/light$ git pull## Set information to use the theme$ cd yt8yt.github.io$ vi _config.yml~~~~~~~~~~~~~~~~~~ _config.yml ~~~~~~~~~~~~~~~~~~# Extensions## Plugins: http://hexo.io/plugins/## Themes: http://hexo.io/themes/theme: light</code></pre><h3 id="12-Create-a-new-page-file"><a href="#12-Create-a-new-page-file" class="headerlink" title="12. Create a new page file"></a>12. Create a new page file</h3><p><a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">https://hexo.io/docs/writing.html</a></p><pre><code>$ hexo new page aboutmeINFO  Created: ~/***/yt8yt.github.io/source/aboutme/index.md$ cd source/aboutme/$ vi index.md</code></pre><h3 id="13-Use-“Read-More”"><a href="#13-Use-“Read-More”" class="headerlink" title="13. Use “Read More”"></a>13. Use “Read More”</h3><p>Write <code>&lt;!-- more --&gt;</code> in your articles.  </p><h3 id="14-Use-Plugins"><a href="#14-Use-Plugins" class="headerlink" title="14. Use Plugins"></a>14. Use Plugins</h3><p><a href="https://github.com/hexojs/hexo/wiki/Plugins" target="_blank" rel="noopener">https://github.com/hexojs/hexo/wiki/Plugins</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> github </tag>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/02/01/001-hello-world/"/>
      <url>/2020/02/01/001-hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
